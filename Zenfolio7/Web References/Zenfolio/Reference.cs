//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Zenfolio7.Zenfolio {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ZfApiSoap", Namespace="http://www.zenfolio.com/api/1.8")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GroupElement))]
    public partial class ZfApi : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePhotoSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePhotoSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePhotoSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CollectionAddPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback CollectionRemovePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePhotoAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePhotoSetAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupAccessOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReorderPhotoSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReindexPhotoSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RotatePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetGroupTitlePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPhotoSetTitlePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetPhotoSetFeaturedIndexOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovePhotoSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReorderGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReplacePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback MoveGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback LinkGalleryFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AutoLinkGalleryFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGalleryFileOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback UndeleteMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPrivilegeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateFavoritesSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShareFavoritesSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadSharedFavoritesSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVideoPlaybackUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResolveUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateQuickBlogPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGroupTitlePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemovePhotoSetTitlePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetRandomPhotoSetTitlePhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback MovePhotosOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePhotosOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateVisitorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVisitorKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticatePlainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetChallengeOperationCompleted;
        
        private System.Threading.SendOrPostCallback AuthenticateOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPrivateProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPublicProfileOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadGroupHierarchyOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadAccessRealmOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPhotoSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPhotoSetPhotoSizesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPhotoSetPhotosOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadGalleryFilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoadPhotoOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyringAddKeyPlainOperationCompleted;
        
        private System.Threading.SendOrPostCallback KeyringGetUnlockedRealmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDownloadOriginalKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchSetByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchSetByTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPopularSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecentSetsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPhotoByCategoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchPhotoByTextOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPopularPhotosOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRecentPhotosOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePhotoFromUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateVideoFromUrlOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ZfApi() {
            this.Url = global::Zenfolio7.Properties.Settings.Default.Zenfolio7_Zenfolio_ZfApi;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UpdateGroupCompletedEventHandler UpdateGroupCompleted;
        
        /// <remarks/>
        public event CreatePhotoSetCompletedEventHandler CreatePhotoSetCompleted;
        
        /// <remarks/>
        public event DeletePhotoSetCompletedEventHandler DeletePhotoSetCompleted;
        
        /// <remarks/>
        public event UpdatePhotoSetCompletedEventHandler UpdatePhotoSetCompleted;
        
        /// <remarks/>
        public event DeletePhotoCompletedEventHandler DeletePhotoCompleted;
        
        /// <remarks/>
        public event UpdatePhotoCompletedEventHandler UpdatePhotoCompleted;
        
        /// <remarks/>
        public event CollectionAddPhotoCompletedEventHandler CollectionAddPhotoCompleted;
        
        /// <remarks/>
        public event CollectionRemovePhotoCompletedEventHandler CollectionRemovePhotoCompleted;
        
        /// <remarks/>
        public event UpdatePhotoAccessCompletedEventHandler UpdatePhotoAccessCompleted;
        
        /// <remarks/>
        public event UpdatePhotoSetAccessCompletedEventHandler UpdatePhotoSetAccessCompleted;
        
        /// <remarks/>
        public event UpdateGroupAccessCompletedEventHandler UpdateGroupAccessCompleted;
        
        /// <remarks/>
        public event ReorderPhotoSetCompletedEventHandler ReorderPhotoSetCompleted;
        
        /// <remarks/>
        public event ReindexPhotoSetCompletedEventHandler ReindexPhotoSetCompleted;
        
        /// <remarks/>
        public event MovePhotoCompletedEventHandler MovePhotoCompleted;
        
        /// <remarks/>
        public event RotatePhotoCompletedEventHandler RotatePhotoCompleted;
        
        /// <remarks/>
        public event SetGroupTitlePhotoCompletedEventHandler SetGroupTitlePhotoCompleted;
        
        /// <remarks/>
        public event SetPhotoSetTitlePhotoCompletedEventHandler SetPhotoSetTitlePhotoCompleted;
        
        /// <remarks/>
        public event SetPhotoSetFeaturedIndexCompletedEventHandler SetPhotoSetFeaturedIndexCompleted;
        
        /// <remarks/>
        public event MovePhotoSetCompletedEventHandler MovePhotoSetCompleted;
        
        /// <remarks/>
        public event ReorderGroupCompletedEventHandler ReorderGroupCompleted;
        
        /// <remarks/>
        public event ReplacePhotoCompletedEventHandler ReplacePhotoCompleted;
        
        /// <remarks/>
        public event MoveGroupCompletedEventHandler MoveGroupCompleted;
        
        /// <remarks/>
        public event LinkGalleryFilesCompletedEventHandler LinkGalleryFilesCompleted;
        
        /// <remarks/>
        public event AutoLinkGalleryFilesCompletedEventHandler AutoLinkGalleryFilesCompleted;
        
        /// <remarks/>
        public event DeleteGalleryFileCompletedEventHandler DeleteGalleryFileCompleted;
        
        /// <remarks/>
        public event LoadMessagesCompletedEventHandler LoadMessagesCompleted;
        
        /// <remarks/>
        public event AddMessageCompletedEventHandler AddMessageCompleted;
        
        /// <remarks/>
        public event DeleteMessageCompletedEventHandler DeleteMessageCompleted;
        
        /// <remarks/>
        public event UndeleteMessageCompletedEventHandler UndeleteMessageCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event CheckPrivilegeCompletedEventHandler CheckPrivilegeCompleted;
        
        /// <remarks/>
        public event CreateFavoritesSetCompletedEventHandler CreateFavoritesSetCompleted;
        
        /// <remarks/>
        public event ShareFavoritesSetCompletedEventHandler ShareFavoritesSetCompleted;
        
        /// <remarks/>
        public event LoadSharedFavoritesSetsCompletedEventHandler LoadSharedFavoritesSetsCompleted;
        
        /// <remarks/>
        public event GetVideoPlaybackUrlCompletedEventHandler GetVideoPlaybackUrlCompleted;
        
        /// <remarks/>
        public event ResolveReferenceCompletedEventHandler ResolveReferenceCompleted;
        
        /// <remarks/>
        public event ResolveUrlCompletedEventHandler ResolveUrlCompleted;
        
        /// <remarks/>
        public event CreateQuickBlogPostCompletedEventHandler CreateQuickBlogPostCompleted;
        
        /// <remarks/>
        public event RemoveGroupTitlePhotoCompletedEventHandler RemoveGroupTitlePhotoCompleted;
        
        /// <remarks/>
        public event RemovePhotoSetTitlePhotoCompletedEventHandler RemovePhotoSetTitlePhotoCompleted;
        
        /// <remarks/>
        public event SetRandomPhotoSetTitlePhotoCompletedEventHandler SetRandomPhotoSetTitlePhotoCompleted;
        
        /// <remarks/>
        public event MovePhotosCompletedEventHandler MovePhotosCompleted;
        
        /// <remarks/>
        public event DeletePhotosCompletedEventHandler DeletePhotosCompleted;
        
        /// <remarks/>
        public event AuthenticateVisitorCompletedEventHandler AuthenticateVisitorCompleted;
        
        /// <remarks/>
        public event GetVisitorKeyCompletedEventHandler GetVisitorKeyCompleted;
        
        /// <remarks/>
        public event AuthenticatePlainCompletedEventHandler AuthenticatePlainCompleted;
        
        /// <remarks/>
        public event GetChallengeCompletedEventHandler GetChallengeCompleted;
        
        /// <remarks/>
        public event AuthenticateCompletedEventHandler AuthenticateCompleted;
        
        /// <remarks/>
        public event LoadPrivateProfileCompletedEventHandler LoadPrivateProfileCompleted;
        
        /// <remarks/>
        public event LoadPublicProfileCompletedEventHandler LoadPublicProfileCompleted;
        
        /// <remarks/>
        public event LoadGroupHierarchyCompletedEventHandler LoadGroupHierarchyCompleted;
        
        /// <remarks/>
        public event LoadGroupCompletedEventHandler LoadGroupCompleted;
        
        /// <remarks/>
        public event LoadAccessRealmCompletedEventHandler LoadAccessRealmCompleted;
        
        /// <remarks/>
        public event LoadPhotoSetCompletedEventHandler LoadPhotoSetCompleted;
        
        /// <remarks/>
        public event LoadPhotoSetPhotoSizesCompletedEventHandler LoadPhotoSetPhotoSizesCompleted;
        
        /// <remarks/>
        public event LoadPhotoSetPhotosCompletedEventHandler LoadPhotoSetPhotosCompleted;
        
        /// <remarks/>
        public event LoadGalleryFilesCompletedEventHandler LoadGalleryFilesCompleted;
        
        /// <remarks/>
        public event LoadPhotoCompletedEventHandler LoadPhotoCompleted;
        
        /// <remarks/>
        public event KeyringAddKeyPlainCompletedEventHandler KeyringAddKeyPlainCompleted;
        
        /// <remarks/>
        public event KeyringGetUnlockedRealmsCompletedEventHandler KeyringGetUnlockedRealmsCompleted;
        
        /// <remarks/>
        public event GetDownloadOriginalKeyCompletedEventHandler GetDownloadOriginalKeyCompleted;
        
        /// <remarks/>
        public event GetCategoriesCompletedEventHandler GetCategoriesCompleted;
        
        /// <remarks/>
        public event SearchSetByCategoryCompletedEventHandler SearchSetByCategoryCompleted;
        
        /// <remarks/>
        public event SearchSetByTextCompletedEventHandler SearchSetByTextCompleted;
        
        /// <remarks/>
        public event GetPopularSetsCompletedEventHandler GetPopularSetsCompleted;
        
        /// <remarks/>
        public event GetRecentSetsCompletedEventHandler GetRecentSetsCompleted;
        
        /// <remarks/>
        public event SearchPhotoByCategoryCompletedEventHandler SearchPhotoByCategoryCompleted;
        
        /// <remarks/>
        public event SearchPhotoByTextCompletedEventHandler SearchPhotoByTextCompleted;
        
        /// <remarks/>
        public event GetPopularPhotosCompletedEventHandler GetPopularPhotosCompleted;
        
        /// <remarks/>
        public event GetRecentPhotosCompletedEventHandler GetRecentPhotosCompleted;
        
        /// <remarks/>
        public event CreateGroupCompletedEventHandler CreateGroupCompleted;
        
        /// <remarks/>
        public event DeleteGroupCompletedEventHandler DeleteGroupCompleted;
        
        /// <remarks/>
        public event CreatePhotoFromUrlCompletedEventHandler CreatePhotoFromUrlCompleted;
        
        /// <remarks/>
        public event CreateVideoFromUrlCompletedEventHandler CreateVideoFromUrlCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/UpdateGroup", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group UpdateGroup(long groupId, GroupUpdater updater) {
            object[] results = this.Invoke("UpdateGroup", new object[] {
                        groupId,
                        updater});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(long groupId, GroupUpdater updater) {
            this.UpdateGroupAsync(groupId, updater, null);
        }
        
        /// <remarks/>
        public void UpdateGroupAsync(long groupId, GroupUpdater updater, object userState) {
            if ((this.UpdateGroupOperationCompleted == null)) {
                this.UpdateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateGroup", new object[] {
                        groupId,
                        updater}, this.UpdateGroupOperationCompleted, userState);
        }
        
        private void OnUpdateGroupOperationCompleted(object arg) {
            if ((this.UpdateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupCompleted(this, new UpdateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CreatePhotoSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoSet CreatePhotoSet(long groupId, PhotoSetType type, PhotoSetUpdater updater) {
            object[] results = this.Invoke("CreatePhotoSet", new object[] {
                        groupId,
                        type,
                        updater});
            return ((PhotoSet)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePhotoSetAsync(long groupId, PhotoSetType type, PhotoSetUpdater updater) {
            this.CreatePhotoSetAsync(groupId, type, updater, null);
        }
        
        /// <remarks/>
        public void CreatePhotoSetAsync(long groupId, PhotoSetType type, PhotoSetUpdater updater, object userState) {
            if ((this.CreatePhotoSetOperationCompleted == null)) {
                this.CreatePhotoSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePhotoSetOperationCompleted);
            }
            this.InvokeAsync("CreatePhotoSet", new object[] {
                        groupId,
                        type,
                        updater}, this.CreatePhotoSetOperationCompleted, userState);
        }
        
        private void OnCreatePhotoSetOperationCompleted(object arg) {
            if ((this.CreatePhotoSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePhotoSetCompleted(this, new CreatePhotoSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/DeletePhotoSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePhotoSet(long photoSetId) {
            this.Invoke("DeletePhotoSet", new object[] {
                        photoSetId});
        }
        
        /// <remarks/>
        public void DeletePhotoSetAsync(long photoSetId) {
            this.DeletePhotoSetAsync(photoSetId, null);
        }
        
        /// <remarks/>
        public void DeletePhotoSetAsync(long photoSetId, object userState) {
            if ((this.DeletePhotoSetOperationCompleted == null)) {
                this.DeletePhotoSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePhotoSetOperationCompleted);
            }
            this.InvokeAsync("DeletePhotoSet", new object[] {
                        photoSetId}, this.DeletePhotoSetOperationCompleted, userState);
        }
        
        private void OnDeletePhotoSetOperationCompleted(object arg) {
            if ((this.DeletePhotoSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePhotoSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/UpdatePhotoSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoSet UpdatePhotoSet(long photoSetId, PhotoSetUpdater updater) {
            object[] results = this.Invoke("UpdatePhotoSet", new object[] {
                        photoSetId,
                        updater});
            return ((PhotoSet)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePhotoSetAsync(long photoSetId, PhotoSetUpdater updater) {
            this.UpdatePhotoSetAsync(photoSetId, updater, null);
        }
        
        /// <remarks/>
        public void UpdatePhotoSetAsync(long photoSetId, PhotoSetUpdater updater, object userState) {
            if ((this.UpdatePhotoSetOperationCompleted == null)) {
                this.UpdatePhotoSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhotoSetOperationCompleted);
            }
            this.InvokeAsync("UpdatePhotoSet", new object[] {
                        photoSetId,
                        updater}, this.UpdatePhotoSetOperationCompleted, userState);
        }
        
        private void OnUpdatePhotoSetOperationCompleted(object arg) {
            if ((this.UpdatePhotoSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePhotoSetCompleted(this, new UpdatePhotoSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/DeletePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePhoto(long photoId) {
            this.Invoke("DeletePhoto", new object[] {
                        photoId});
        }
        
        /// <remarks/>
        public void DeletePhotoAsync(long photoId) {
            this.DeletePhotoAsync(photoId, null);
        }
        
        /// <remarks/>
        public void DeletePhotoAsync(long photoId, object userState) {
            if ((this.DeletePhotoOperationCompleted == null)) {
                this.DeletePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePhotoOperationCompleted);
            }
            this.InvokeAsync("DeletePhoto", new object[] {
                        photoId}, this.DeletePhotoOperationCompleted, userState);
        }
        
        private void OnDeletePhotoOperationCompleted(object arg) {
            if ((this.DeletePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/UpdatePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo UpdatePhoto(long photoId, PhotoUpdater updater) {
            object[] results = this.Invoke("UpdatePhoto", new object[] {
                        photoId,
                        updater});
            return ((Photo)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePhotoAsync(long photoId, PhotoUpdater updater) {
            this.UpdatePhotoAsync(photoId, updater, null);
        }
        
        /// <remarks/>
        public void UpdatePhotoAsync(long photoId, PhotoUpdater updater, object userState) {
            if ((this.UpdatePhotoOperationCompleted == null)) {
                this.UpdatePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhotoOperationCompleted);
            }
            this.InvokeAsync("UpdatePhoto", new object[] {
                        photoId,
                        updater}, this.UpdatePhotoOperationCompleted, userState);
        }
        
        private void OnUpdatePhotoOperationCompleted(object arg) {
            if ((this.UpdatePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePhotoCompleted(this, new UpdatePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CollectionAddPhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CollectionAddPhoto(long collectionId, long photoId) {
            this.Invoke("CollectionAddPhoto", new object[] {
                        collectionId,
                        photoId});
        }
        
        /// <remarks/>
        public void CollectionAddPhotoAsync(long collectionId, long photoId) {
            this.CollectionAddPhotoAsync(collectionId, photoId, null);
        }
        
        /// <remarks/>
        public void CollectionAddPhotoAsync(long collectionId, long photoId, object userState) {
            if ((this.CollectionAddPhotoOperationCompleted == null)) {
                this.CollectionAddPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCollectionAddPhotoOperationCompleted);
            }
            this.InvokeAsync("CollectionAddPhoto", new object[] {
                        collectionId,
                        photoId}, this.CollectionAddPhotoOperationCompleted, userState);
        }
        
        private void OnCollectionAddPhotoOperationCompleted(object arg) {
            if ((this.CollectionAddPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CollectionAddPhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CollectionRemovePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CollectionRemovePhoto(long collectionId, long photoId) {
            this.Invoke("CollectionRemovePhoto", new object[] {
                        collectionId,
                        photoId});
        }
        
        /// <remarks/>
        public void CollectionRemovePhotoAsync(long collectionId, long photoId) {
            this.CollectionRemovePhotoAsync(collectionId, photoId, null);
        }
        
        /// <remarks/>
        public void CollectionRemovePhotoAsync(long collectionId, long photoId, object userState) {
            if ((this.CollectionRemovePhotoOperationCompleted == null)) {
                this.CollectionRemovePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCollectionRemovePhotoOperationCompleted);
            }
            this.InvokeAsync("CollectionRemovePhoto", new object[] {
                        collectionId,
                        photoId}, this.CollectionRemovePhotoOperationCompleted, userState);
        }
        
        private void OnCollectionRemovePhotoOperationCompleted(object arg) {
            if ((this.CollectionRemovePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CollectionRemovePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/UpdatePhotoAccess", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdatePhotoAccess(long photoId, AccessUpdater updater) {
            object[] results = this.Invoke("UpdatePhotoAccess", new object[] {
                        photoId,
                        updater});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePhotoAccessAsync(long photoId, AccessUpdater updater) {
            this.UpdatePhotoAccessAsync(photoId, updater, null);
        }
        
        /// <remarks/>
        public void UpdatePhotoAccessAsync(long photoId, AccessUpdater updater, object userState) {
            if ((this.UpdatePhotoAccessOperationCompleted == null)) {
                this.UpdatePhotoAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhotoAccessOperationCompleted);
            }
            this.InvokeAsync("UpdatePhotoAccess", new object[] {
                        photoId,
                        updater}, this.UpdatePhotoAccessOperationCompleted, userState);
        }
        
        private void OnUpdatePhotoAccessOperationCompleted(object arg) {
            if ((this.UpdatePhotoAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePhotoAccessCompleted(this, new UpdatePhotoAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/UpdatePhotoSetAccess", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdatePhotoSetAccess(long photoSetId, AccessUpdater updater) {
            object[] results = this.Invoke("UpdatePhotoSetAccess", new object[] {
                        photoSetId,
                        updater});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePhotoSetAccessAsync(long photoSetId, AccessUpdater updater) {
            this.UpdatePhotoSetAccessAsync(photoSetId, updater, null);
        }
        
        /// <remarks/>
        public void UpdatePhotoSetAccessAsync(long photoSetId, AccessUpdater updater, object userState) {
            if ((this.UpdatePhotoSetAccessOperationCompleted == null)) {
                this.UpdatePhotoSetAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePhotoSetAccessOperationCompleted);
            }
            this.InvokeAsync("UpdatePhotoSetAccess", new object[] {
                        photoSetId,
                        updater}, this.UpdatePhotoSetAccessOperationCompleted, userState);
        }
        
        private void OnUpdatePhotoSetAccessOperationCompleted(object arg) {
            if ((this.UpdatePhotoSetAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePhotoSetAccessCompleted(this, new UpdatePhotoSetAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/UpdateGroupAccess", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long UpdateGroupAccess(long groupId, AccessUpdater updater) {
            object[] results = this.Invoke("UpdateGroupAccess", new object[] {
                        groupId,
                        updater});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupAccessAsync(long groupId, AccessUpdater updater) {
            this.UpdateGroupAccessAsync(groupId, updater, null);
        }
        
        /// <remarks/>
        public void UpdateGroupAccessAsync(long groupId, AccessUpdater updater, object userState) {
            if ((this.UpdateGroupAccessOperationCompleted == null)) {
                this.UpdateGroupAccessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupAccessOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupAccess", new object[] {
                        groupId,
                        updater}, this.UpdateGroupAccessOperationCompleted, userState);
        }
        
        private void OnUpdateGroupAccessOperationCompleted(object arg) {
            if ((this.UpdateGroupAccessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupAccessCompleted(this, new UpdateGroupAccessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/ReorderPhotoSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReorderPhotoSet(long photoSetId, ShiftOrder shiftOrder) {
            this.Invoke("ReorderPhotoSet", new object[] {
                        photoSetId,
                        shiftOrder});
        }
        
        /// <remarks/>
        public void ReorderPhotoSetAsync(long photoSetId, ShiftOrder shiftOrder) {
            this.ReorderPhotoSetAsync(photoSetId, shiftOrder, null);
        }
        
        /// <remarks/>
        public void ReorderPhotoSetAsync(long photoSetId, ShiftOrder shiftOrder, object userState) {
            if ((this.ReorderPhotoSetOperationCompleted == null)) {
                this.ReorderPhotoSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReorderPhotoSetOperationCompleted);
            }
            this.InvokeAsync("ReorderPhotoSet", new object[] {
                        photoSetId,
                        shiftOrder}, this.ReorderPhotoSetOperationCompleted, userState);
        }
        
        private void OnReorderPhotoSetOperationCompleted(object arg) {
            if ((this.ReorderPhotoSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReorderPhotoSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/ReindexPhotoSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReindexPhotoSet(long photoSetId, int startIndex, int[] mapping) {
            this.Invoke("ReindexPhotoSet", new object[] {
                        photoSetId,
                        startIndex,
                        mapping});
        }
        
        /// <remarks/>
        public void ReindexPhotoSetAsync(long photoSetId, int startIndex, int[] mapping) {
            this.ReindexPhotoSetAsync(photoSetId, startIndex, mapping, null);
        }
        
        /// <remarks/>
        public void ReindexPhotoSetAsync(long photoSetId, int startIndex, int[] mapping, object userState) {
            if ((this.ReindexPhotoSetOperationCompleted == null)) {
                this.ReindexPhotoSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReindexPhotoSetOperationCompleted);
            }
            this.InvokeAsync("ReindexPhotoSet", new object[] {
                        photoSetId,
                        startIndex,
                        mapping}, this.ReindexPhotoSetOperationCompleted, userState);
        }
        
        private void OnReindexPhotoSetOperationCompleted(object arg) {
            if ((this.ReindexPhotoSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReindexPhotoSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/MovePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MovePhoto(long srcSetId, long photoId, long destSetId, int index) {
            this.Invoke("MovePhoto", new object[] {
                        srcSetId,
                        photoId,
                        destSetId,
                        index});
        }
        
        /// <remarks/>
        public void MovePhotoAsync(long srcSetId, long photoId, long destSetId, int index) {
            this.MovePhotoAsync(srcSetId, photoId, destSetId, index, null);
        }
        
        /// <remarks/>
        public void MovePhotoAsync(long srcSetId, long photoId, long destSetId, int index, object userState) {
            if ((this.MovePhotoOperationCompleted == null)) {
                this.MovePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovePhotoOperationCompleted);
            }
            this.InvokeAsync("MovePhoto", new object[] {
                        srcSetId,
                        photoId,
                        destSetId,
                        index}, this.MovePhotoOperationCompleted, userState);
        }
        
        private void OnMovePhotoOperationCompleted(object arg) {
            if ((this.MovePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/RotatePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo RotatePhoto(long photoId, PhotoRotation rotation) {
            object[] results = this.Invoke("RotatePhoto", new object[] {
                        photoId,
                        rotation});
            return ((Photo)(results[0]));
        }
        
        /// <remarks/>
        public void RotatePhotoAsync(long photoId, PhotoRotation rotation) {
            this.RotatePhotoAsync(photoId, rotation, null);
        }
        
        /// <remarks/>
        public void RotatePhotoAsync(long photoId, PhotoRotation rotation, object userState) {
            if ((this.RotatePhotoOperationCompleted == null)) {
                this.RotatePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRotatePhotoOperationCompleted);
            }
            this.InvokeAsync("RotatePhoto", new object[] {
                        photoId,
                        rotation}, this.RotatePhotoOperationCompleted, userState);
        }
        
        private void OnRotatePhotoOperationCompleted(object arg) {
            if ((this.RotatePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RotatePhotoCompleted(this, new RotatePhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/SetGroupTitlePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetGroupTitlePhoto(long groupId, long photoId) {
            this.Invoke("SetGroupTitlePhoto", new object[] {
                        groupId,
                        photoId});
        }
        
        /// <remarks/>
        public void SetGroupTitlePhotoAsync(long groupId, long photoId) {
            this.SetGroupTitlePhotoAsync(groupId, photoId, null);
        }
        
        /// <remarks/>
        public void SetGroupTitlePhotoAsync(long groupId, long photoId, object userState) {
            if ((this.SetGroupTitlePhotoOperationCompleted == null)) {
                this.SetGroupTitlePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetGroupTitlePhotoOperationCompleted);
            }
            this.InvokeAsync("SetGroupTitlePhoto", new object[] {
                        groupId,
                        photoId}, this.SetGroupTitlePhotoOperationCompleted, userState);
        }
        
        private void OnSetGroupTitlePhotoOperationCompleted(object arg) {
            if ((this.SetGroupTitlePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetGroupTitlePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/SetPhotoSetTitlePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPhotoSetTitlePhoto(long photoSetId, long photoId) {
            this.Invoke("SetPhotoSetTitlePhoto", new object[] {
                        photoSetId,
                        photoId});
        }
        
        /// <remarks/>
        public void SetPhotoSetTitlePhotoAsync(long photoSetId, long photoId) {
            this.SetPhotoSetTitlePhotoAsync(photoSetId, photoId, null);
        }
        
        /// <remarks/>
        public void SetPhotoSetTitlePhotoAsync(long photoSetId, long photoId, object userState) {
            if ((this.SetPhotoSetTitlePhotoOperationCompleted == null)) {
                this.SetPhotoSetTitlePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPhotoSetTitlePhotoOperationCompleted);
            }
            this.InvokeAsync("SetPhotoSetTitlePhoto", new object[] {
                        photoSetId,
                        photoId}, this.SetPhotoSetTitlePhotoOperationCompleted, userState);
        }
        
        private void OnSetPhotoSetTitlePhotoOperationCompleted(object arg) {
            if ((this.SetPhotoSetTitlePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPhotoSetTitlePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/SetPhotoSetFeaturedIndex", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetPhotoSetFeaturedIndex(long photoSetId, int index) {
            this.Invoke("SetPhotoSetFeaturedIndex", new object[] {
                        photoSetId,
                        index});
        }
        
        /// <remarks/>
        public void SetPhotoSetFeaturedIndexAsync(long photoSetId, int index) {
            this.SetPhotoSetFeaturedIndexAsync(photoSetId, index, null);
        }
        
        /// <remarks/>
        public void SetPhotoSetFeaturedIndexAsync(long photoSetId, int index, object userState) {
            if ((this.SetPhotoSetFeaturedIndexOperationCompleted == null)) {
                this.SetPhotoSetFeaturedIndexOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetPhotoSetFeaturedIndexOperationCompleted);
            }
            this.InvokeAsync("SetPhotoSetFeaturedIndex", new object[] {
                        photoSetId,
                        index}, this.SetPhotoSetFeaturedIndexOperationCompleted, userState);
        }
        
        private void OnSetPhotoSetFeaturedIndexOperationCompleted(object arg) {
            if ((this.SetPhotoSetFeaturedIndexCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetPhotoSetFeaturedIndexCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/MovePhotoSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MovePhotoSet(long photoSetId, long destGroupId, int index) {
            this.Invoke("MovePhotoSet", new object[] {
                        photoSetId,
                        destGroupId,
                        index});
        }
        
        /// <remarks/>
        public void MovePhotoSetAsync(long photoSetId, long destGroupId, int index) {
            this.MovePhotoSetAsync(photoSetId, destGroupId, index, null);
        }
        
        /// <remarks/>
        public void MovePhotoSetAsync(long photoSetId, long destGroupId, int index, object userState) {
            if ((this.MovePhotoSetOperationCompleted == null)) {
                this.MovePhotoSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovePhotoSetOperationCompleted);
            }
            this.InvokeAsync("MovePhotoSet", new object[] {
                        photoSetId,
                        destGroupId,
                        index}, this.MovePhotoSetOperationCompleted, userState);
        }
        
        private void OnMovePhotoSetOperationCompleted(object arg) {
            if ((this.MovePhotoSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovePhotoSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/ReorderGroup", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReorderGroup(long groupId, GroupShiftOrder shiftOrder) {
            this.Invoke("ReorderGroup", new object[] {
                        groupId,
                        shiftOrder});
        }
        
        /// <remarks/>
        public void ReorderGroupAsync(long groupId, GroupShiftOrder shiftOrder) {
            this.ReorderGroupAsync(groupId, shiftOrder, null);
        }
        
        /// <remarks/>
        public void ReorderGroupAsync(long groupId, GroupShiftOrder shiftOrder, object userState) {
            if ((this.ReorderGroupOperationCompleted == null)) {
                this.ReorderGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReorderGroupOperationCompleted);
            }
            this.InvokeAsync("ReorderGroup", new object[] {
                        groupId,
                        shiftOrder}, this.ReorderGroupOperationCompleted, userState);
        }
        
        private void OnReorderGroupOperationCompleted(object arg) {
            if ((this.ReorderGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReorderGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/ReplacePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ReplacePhoto(long originalId, long replacedId) {
            this.Invoke("ReplacePhoto", new object[] {
                        originalId,
                        replacedId});
        }
        
        /// <remarks/>
        public void ReplacePhotoAsync(long originalId, long replacedId) {
            this.ReplacePhotoAsync(originalId, replacedId, null);
        }
        
        /// <remarks/>
        public void ReplacePhotoAsync(long originalId, long replacedId, object userState) {
            if ((this.ReplacePhotoOperationCompleted == null)) {
                this.ReplacePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReplacePhotoOperationCompleted);
            }
            this.InvokeAsync("ReplacePhoto", new object[] {
                        originalId,
                        replacedId}, this.ReplacePhotoOperationCompleted, userState);
        }
        
        private void OnReplacePhotoOperationCompleted(object arg) {
            if ((this.ReplacePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReplacePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/MoveGroup", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MoveGroup(long groupId, long destGroupId, int index) {
            this.Invoke("MoveGroup", new object[] {
                        groupId,
                        destGroupId,
                        index});
        }
        
        /// <remarks/>
        public void MoveGroupAsync(long groupId, long destGroupId, int index) {
            this.MoveGroupAsync(groupId, destGroupId, index, null);
        }
        
        /// <remarks/>
        public void MoveGroupAsync(long groupId, long destGroupId, int index, object userState) {
            if ((this.MoveGroupOperationCompleted == null)) {
                this.MoveGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMoveGroupOperationCompleted);
            }
            this.InvokeAsync("MoveGroup", new object[] {
                        groupId,
                        destGroupId,
                        index}, this.MoveGroupOperationCompleted, userState);
        }
        
        private void OnMoveGroupOperationCompleted(object arg) {
            if ((this.MoveGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MoveGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LinkGalleryFiles", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LinkGalleryFiles(long[] fileIds, long[] photoIds) {
            this.Invoke("LinkGalleryFiles", new object[] {
                        fileIds,
                        photoIds});
        }
        
        /// <remarks/>
        public void LinkGalleryFilesAsync(long[] fileIds, long[] photoIds) {
            this.LinkGalleryFilesAsync(fileIds, photoIds, null);
        }
        
        /// <remarks/>
        public void LinkGalleryFilesAsync(long[] fileIds, long[] photoIds, object userState) {
            if ((this.LinkGalleryFilesOperationCompleted == null)) {
                this.LinkGalleryFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLinkGalleryFilesOperationCompleted);
            }
            this.InvokeAsync("LinkGalleryFiles", new object[] {
                        fileIds,
                        photoIds}, this.LinkGalleryFilesOperationCompleted, userState);
        }
        
        private void OnLinkGalleryFilesOperationCompleted(object arg) {
            if ((this.LinkGalleryFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LinkGalleryFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/AutoLinkGalleryFiles", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AutoLinkGalleryFiles(long galleryId) {
            this.Invoke("AutoLinkGalleryFiles", new object[] {
                        galleryId});
        }
        
        /// <remarks/>
        public void AutoLinkGalleryFilesAsync(long galleryId) {
            this.AutoLinkGalleryFilesAsync(galleryId, null);
        }
        
        /// <remarks/>
        public void AutoLinkGalleryFilesAsync(long galleryId, object userState) {
            if ((this.AutoLinkGalleryFilesOperationCompleted == null)) {
                this.AutoLinkGalleryFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAutoLinkGalleryFilesOperationCompleted);
            }
            this.InvokeAsync("AutoLinkGalleryFiles", new object[] {
                        galleryId}, this.AutoLinkGalleryFilesOperationCompleted, userState);
        }
        
        private void OnAutoLinkGalleryFilesOperationCompleted(object arg) {
            if ((this.AutoLinkGalleryFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AutoLinkGalleryFilesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/DeleteGalleryFile", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteGalleryFile(long fileId) {
            this.Invoke("DeleteGalleryFile", new object[] {
                        fileId});
        }
        
        /// <remarks/>
        public void DeleteGalleryFileAsync(long fileId) {
            this.DeleteGalleryFileAsync(fileId, null);
        }
        
        /// <remarks/>
        public void DeleteGalleryFileAsync(long fileId, object userState) {
            if ((this.DeleteGalleryFileOperationCompleted == null)) {
                this.DeleteGalleryFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGalleryFileOperationCompleted);
            }
            this.InvokeAsync("DeleteGalleryFile", new object[] {
                        fileId}, this.DeleteGalleryFileOperationCompleted, userState);
        }
        
        private void OnDeleteGalleryFileOperationCompleted(object arg) {
            if ((this.DeleteGalleryFileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGalleryFileCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadMessages", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Message[] LoadMessages(string mailboxId, System.DateTime postedSince, bool includeDeleted) {
            object[] results = this.Invoke("LoadMessages", new object[] {
                        mailboxId,
                        postedSince,
                        includeDeleted});
            return ((Message[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadMessagesAsync(string mailboxId, System.DateTime postedSince, bool includeDeleted) {
            this.LoadMessagesAsync(mailboxId, postedSince, includeDeleted, null);
        }
        
        /// <remarks/>
        public void LoadMessagesAsync(string mailboxId, System.DateTime postedSince, bool includeDeleted, object userState) {
            if ((this.LoadMessagesOperationCompleted == null)) {
                this.LoadMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadMessagesOperationCompleted);
            }
            this.InvokeAsync("LoadMessages", new object[] {
                        mailboxId,
                        postedSince,
                        includeDeleted}, this.LoadMessagesOperationCompleted, userState);
        }
        
        private void OnLoadMessagesOperationCompleted(object arg) {
            if ((this.LoadMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadMessagesCompleted(this, new LoadMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/AddMessage", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Message AddMessage(string mailboxId, MessageUpdater updater) {
            object[] results = this.Invoke("AddMessage", new object[] {
                        mailboxId,
                        updater});
            return ((Message)(results[0]));
        }
        
        /// <remarks/>
        public void AddMessageAsync(string mailboxId, MessageUpdater updater) {
            this.AddMessageAsync(mailboxId, updater, null);
        }
        
        /// <remarks/>
        public void AddMessageAsync(string mailboxId, MessageUpdater updater, object userState) {
            if ((this.AddMessageOperationCompleted == null)) {
                this.AddMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddMessageOperationCompleted);
            }
            this.InvokeAsync("AddMessage", new object[] {
                        mailboxId,
                        updater}, this.AddMessageOperationCompleted, userState);
        }
        
        private void OnAddMessageOperationCompleted(object arg) {
            if ((this.AddMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddMessageCompleted(this, new AddMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/DeleteMessage", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteMessage(string mailboxId, int messageIndex) {
            this.Invoke("DeleteMessage", new object[] {
                        mailboxId,
                        messageIndex});
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(string mailboxId, int messageIndex) {
            this.DeleteMessageAsync(mailboxId, messageIndex, null);
        }
        
        /// <remarks/>
        public void DeleteMessageAsync(string mailboxId, int messageIndex, object userState) {
            if ((this.DeleteMessageOperationCompleted == null)) {
                this.DeleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMessageOperationCompleted);
            }
            this.InvokeAsync("DeleteMessage", new object[] {
                        mailboxId,
                        messageIndex}, this.DeleteMessageOperationCompleted, userState);
        }
        
        private void OnDeleteMessageOperationCompleted(object arg) {
            if ((this.DeleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/UndeleteMessage", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UndeleteMessage(string mailboxId, int messageIndex) {
            this.Invoke("UndeleteMessage", new object[] {
                        mailboxId,
                        messageIndex});
        }
        
        /// <remarks/>
        public void UndeleteMessageAsync(string mailboxId, int messageIndex) {
            this.UndeleteMessageAsync(mailboxId, messageIndex, null);
        }
        
        /// <remarks/>
        public void UndeleteMessageAsync(string mailboxId, int messageIndex, object userState) {
            if ((this.UndeleteMessageOperationCompleted == null)) {
                this.UndeleteMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUndeleteMessageOperationCompleted);
            }
            this.InvokeAsync("UndeleteMessage", new object[] {
                        mailboxId,
                        messageIndex}, this.UndeleteMessageOperationCompleted, userState);
        }
        
        private void OnUndeleteMessageOperationCompleted(object arg) {
            if ((this.UndeleteMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UndeleteMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetVersion", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CheckPrivilege", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckPrivilege(string loginName, string privilegeName) {
            object[] results = this.Invoke("CheckPrivilege", new object[] {
                        loginName,
                        privilegeName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPrivilegeAsync(string loginName, string privilegeName) {
            this.CheckPrivilegeAsync(loginName, privilegeName, null);
        }
        
        /// <remarks/>
        public void CheckPrivilegeAsync(string loginName, string privilegeName, object userState) {
            if ((this.CheckPrivilegeOperationCompleted == null)) {
                this.CheckPrivilegeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPrivilegeOperationCompleted);
            }
            this.InvokeAsync("CheckPrivilege", new object[] {
                        loginName,
                        privilegeName}, this.CheckPrivilegeOperationCompleted, userState);
        }
        
        private void OnCheckPrivilegeOperationCompleted(object arg) {
            if ((this.CheckPrivilegeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPrivilegeCompleted(this, new CheckPrivilegeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CreateFavoritesSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateFavoritesSet(string name, string photographerLogin, long[] photoIds) {
            object[] results = this.Invoke("CreateFavoritesSet", new object[] {
                        name,
                        photographerLogin,
                        photoIds});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateFavoritesSetAsync(string name, string photographerLogin, long[] photoIds) {
            this.CreateFavoritesSetAsync(name, photographerLogin, photoIds, null);
        }
        
        /// <remarks/>
        public void CreateFavoritesSetAsync(string name, string photographerLogin, long[] photoIds, object userState) {
            if ((this.CreateFavoritesSetOperationCompleted == null)) {
                this.CreateFavoritesSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFavoritesSetOperationCompleted);
            }
            this.InvokeAsync("CreateFavoritesSet", new object[] {
                        name,
                        photographerLogin,
                        photoIds}, this.CreateFavoritesSetOperationCompleted, userState);
        }
        
        private void OnCreateFavoritesSetOperationCompleted(object arg) {
            if ((this.CreateFavoritesSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFavoritesSetCompleted(this, new CreateFavoritesSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/ShareFavoritesSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ShareFavoritesSet(long favoritesSetId, string favoritesSetName, string sharerName, string sharerEmail, string sharerMessage) {
            this.Invoke("ShareFavoritesSet", new object[] {
                        favoritesSetId,
                        favoritesSetName,
                        sharerName,
                        sharerEmail,
                        sharerMessage});
        }
        
        /// <remarks/>
        public void ShareFavoritesSetAsync(long favoritesSetId, string favoritesSetName, string sharerName, string sharerEmail, string sharerMessage) {
            this.ShareFavoritesSetAsync(favoritesSetId, favoritesSetName, sharerName, sharerEmail, sharerMessage, null);
        }
        
        /// <remarks/>
        public void ShareFavoritesSetAsync(long favoritesSetId, string favoritesSetName, string sharerName, string sharerEmail, string sharerMessage, object userState) {
            if ((this.ShareFavoritesSetOperationCompleted == null)) {
                this.ShareFavoritesSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShareFavoritesSetOperationCompleted);
            }
            this.InvokeAsync("ShareFavoritesSet", new object[] {
                        favoritesSetId,
                        favoritesSetName,
                        sharerName,
                        sharerEmail,
                        sharerMessage}, this.ShareFavoritesSetOperationCompleted, userState);
        }
        
        private void OnShareFavoritesSetOperationCompleted(object arg) {
            if ((this.ShareFavoritesSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShareFavoritesSetCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadSharedFavoritesSets", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public FavoritesSet[] LoadSharedFavoritesSets() {
            object[] results = this.Invoke("LoadSharedFavoritesSets", new object[0]);
            return ((FavoritesSet[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadSharedFavoritesSetsAsync() {
            this.LoadSharedFavoritesSetsAsync(null);
        }
        
        /// <remarks/>
        public void LoadSharedFavoritesSetsAsync(object userState) {
            if ((this.LoadSharedFavoritesSetsOperationCompleted == null)) {
                this.LoadSharedFavoritesSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadSharedFavoritesSetsOperationCompleted);
            }
            this.InvokeAsync("LoadSharedFavoritesSets", new object[0], this.LoadSharedFavoritesSetsOperationCompleted, userState);
        }
        
        private void OnLoadSharedFavoritesSetsOperationCompleted(object arg) {
            if ((this.LoadSharedFavoritesSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadSharedFavoritesSetsCompleted(this, new LoadSharedFavoritesSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetVideoPlaybackUrl", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVideoPlaybackUrl(long photoId, VideoPlaybackMode mode, int width, int height) {
            object[] results = this.Invoke("GetVideoPlaybackUrl", new object[] {
                        photoId,
                        mode,
                        width,
                        height});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVideoPlaybackUrlAsync(long photoId, VideoPlaybackMode mode, int width, int height) {
            this.GetVideoPlaybackUrlAsync(photoId, mode, width, height, null);
        }
        
        /// <remarks/>
        public void GetVideoPlaybackUrlAsync(long photoId, VideoPlaybackMode mode, int width, int height, object userState) {
            if ((this.GetVideoPlaybackUrlOperationCompleted == null)) {
                this.GetVideoPlaybackUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVideoPlaybackUrlOperationCompleted);
            }
            this.InvokeAsync("GetVideoPlaybackUrl", new object[] {
                        photoId,
                        mode,
                        width,
                        height}, this.GetVideoPlaybackUrlOperationCompleted, userState);
        }
        
        private void OnGetVideoPlaybackUrlOperationCompleted(object arg) {
            if ((this.GetVideoPlaybackUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVideoPlaybackUrlCompleted(this, new GetVideoPlaybackUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/ResolveReference", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResolveResult ResolveReference(string loginName, string reference) {
            object[] results = this.Invoke("ResolveReference", new object[] {
                        loginName,
                        reference});
            return ((ResolveResult)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveReferenceAsync(string loginName, string reference) {
            this.ResolveReferenceAsync(loginName, reference, null);
        }
        
        /// <remarks/>
        public void ResolveReferenceAsync(string loginName, string reference, object userState) {
            if ((this.ResolveReferenceOperationCompleted == null)) {
                this.ResolveReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveReferenceOperationCompleted);
            }
            this.InvokeAsync("ResolveReference", new object[] {
                        loginName,
                        reference}, this.ResolveReferenceOperationCompleted, userState);
        }
        
        private void OnResolveReferenceOperationCompleted(object arg) {
            if ((this.ResolveReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveReferenceCompleted(this, new ResolveReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/ResolveUrl", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResolveResult ResolveUrl(string url) {
            object[] results = this.Invoke("ResolveUrl", new object[] {
                        url});
            return ((ResolveResult)(results[0]));
        }
        
        /// <remarks/>
        public void ResolveUrlAsync(string url) {
            this.ResolveUrlAsync(url, null);
        }
        
        /// <remarks/>
        public void ResolveUrlAsync(string url, object userState) {
            if ((this.ResolveUrlOperationCompleted == null)) {
                this.ResolveUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResolveUrlOperationCompleted);
            }
            this.InvokeAsync("ResolveUrl", new object[] {
                        url}, this.ResolveUrlOperationCompleted, userState);
        }
        
        private void OnResolveUrlOperationCompleted(object arg) {
            if ((this.ResolveUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResolveUrlCompleted(this, new ResolveUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CreateQuickBlogPost", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateQuickBlogPost(long photoId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> publishDate, string url, string title, string caption, string[] keywords) {
            object[] results = this.Invoke("CreateQuickBlogPost", new object[] {
                        photoId,
                        publishDate,
                        url,
                        title,
                        caption,
                        keywords});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateQuickBlogPostAsync(long photoId, System.Nullable<System.DateTime> publishDate, string url, string title, string caption, string[] keywords) {
            this.CreateQuickBlogPostAsync(photoId, publishDate, url, title, caption, keywords, null);
        }
        
        /// <remarks/>
        public void CreateQuickBlogPostAsync(long photoId, System.Nullable<System.DateTime> publishDate, string url, string title, string caption, string[] keywords, object userState) {
            if ((this.CreateQuickBlogPostOperationCompleted == null)) {
                this.CreateQuickBlogPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateQuickBlogPostOperationCompleted);
            }
            this.InvokeAsync("CreateQuickBlogPost", new object[] {
                        photoId,
                        publishDate,
                        url,
                        title,
                        caption,
                        keywords}, this.CreateQuickBlogPostOperationCompleted, userState);
        }
        
        private void OnCreateQuickBlogPostOperationCompleted(object arg) {
            if ((this.CreateQuickBlogPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateQuickBlogPostCompleted(this, new CreateQuickBlogPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/RemoveGroupTitlePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveGroupTitlePhoto(long groupId) {
            this.Invoke("RemoveGroupTitlePhoto", new object[] {
                        groupId});
        }
        
        /// <remarks/>
        public void RemoveGroupTitlePhotoAsync(long groupId) {
            this.RemoveGroupTitlePhotoAsync(groupId, null);
        }
        
        /// <remarks/>
        public void RemoveGroupTitlePhotoAsync(long groupId, object userState) {
            if ((this.RemoveGroupTitlePhotoOperationCompleted == null)) {
                this.RemoveGroupTitlePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGroupTitlePhotoOperationCompleted);
            }
            this.InvokeAsync("RemoveGroupTitlePhoto", new object[] {
                        groupId}, this.RemoveGroupTitlePhotoOperationCompleted, userState);
        }
        
        private void OnRemoveGroupTitlePhotoOperationCompleted(object arg) {
            if ((this.RemoveGroupTitlePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGroupTitlePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/RemovePhotoSetTitlePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemovePhotoSetTitlePhoto(long photoSetId) {
            this.Invoke("RemovePhotoSetTitlePhoto", new object[] {
                        photoSetId});
        }
        
        /// <remarks/>
        public void RemovePhotoSetTitlePhotoAsync(long photoSetId) {
            this.RemovePhotoSetTitlePhotoAsync(photoSetId, null);
        }
        
        /// <remarks/>
        public void RemovePhotoSetTitlePhotoAsync(long photoSetId, object userState) {
            if ((this.RemovePhotoSetTitlePhotoOperationCompleted == null)) {
                this.RemovePhotoSetTitlePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemovePhotoSetTitlePhotoOperationCompleted);
            }
            this.InvokeAsync("RemovePhotoSetTitlePhoto", new object[] {
                        photoSetId}, this.RemovePhotoSetTitlePhotoOperationCompleted, userState);
        }
        
        private void OnRemovePhotoSetTitlePhotoOperationCompleted(object arg) {
            if ((this.RemovePhotoSetTitlePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemovePhotoSetTitlePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/SetRandomPhotoSetTitlePhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetRandomPhotoSetTitlePhoto(long photoSetId) {
            this.Invoke("SetRandomPhotoSetTitlePhoto", new object[] {
                        photoSetId});
        }
        
        /// <remarks/>
        public void SetRandomPhotoSetTitlePhotoAsync(long photoSetId) {
            this.SetRandomPhotoSetTitlePhotoAsync(photoSetId, null);
        }
        
        /// <remarks/>
        public void SetRandomPhotoSetTitlePhotoAsync(long photoSetId, object userState) {
            if ((this.SetRandomPhotoSetTitlePhotoOperationCompleted == null)) {
                this.SetRandomPhotoSetTitlePhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetRandomPhotoSetTitlePhotoOperationCompleted);
            }
            this.InvokeAsync("SetRandomPhotoSetTitlePhoto", new object[] {
                        photoSetId}, this.SetRandomPhotoSetTitlePhotoOperationCompleted, userState);
        }
        
        private void OnSetRandomPhotoSetTitlePhotoOperationCompleted(object arg) {
            if ((this.SetRandomPhotoSetTitlePhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetRandomPhotoSetTitlePhotoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/MovePhotos", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void MovePhotos(long srcSetId, long destSetId, long[] photoIds) {
            this.Invoke("MovePhotos", new object[] {
                        srcSetId,
                        destSetId,
                        photoIds});
        }
        
        /// <remarks/>
        public void MovePhotosAsync(long srcSetId, long destSetId, long[] photoIds) {
            this.MovePhotosAsync(srcSetId, destSetId, photoIds, null);
        }
        
        /// <remarks/>
        public void MovePhotosAsync(long srcSetId, long destSetId, long[] photoIds, object userState) {
            if ((this.MovePhotosOperationCompleted == null)) {
                this.MovePhotosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMovePhotosOperationCompleted);
            }
            this.InvokeAsync("MovePhotos", new object[] {
                        srcSetId,
                        destSetId,
                        photoIds}, this.MovePhotosOperationCompleted, userState);
        }
        
        private void OnMovePhotosOperationCompleted(object arg) {
            if ((this.MovePhotosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MovePhotosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/DeletePhotos", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePhotos(long[] photoIds) {
            this.Invoke("DeletePhotos", new object[] {
                        photoIds});
        }
        
        /// <remarks/>
        public void DeletePhotosAsync(long[] photoIds) {
            this.DeletePhotosAsync(photoIds, null);
        }
        
        /// <remarks/>
        public void DeletePhotosAsync(long[] photoIds, object userState) {
            if ((this.DeletePhotosOperationCompleted == null)) {
                this.DeletePhotosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePhotosOperationCompleted);
            }
            this.InvokeAsync("DeletePhotos", new object[] {
                        photoIds}, this.DeletePhotosOperationCompleted, userState);
        }
        
        private void OnDeletePhotosOperationCompleted(object arg) {
            if ((this.DeletePhotosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePhotosCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/AuthenticateVisitor", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthenticateVisitor(string visitorKey) {
            object[] results = this.Invoke("AuthenticateVisitor", new object[] {
                        visitorKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateVisitorAsync(string visitorKey) {
            this.AuthenticateVisitorAsync(visitorKey, null);
        }
        
        /// <remarks/>
        public void AuthenticateVisitorAsync(string visitorKey, object userState) {
            if ((this.AuthenticateVisitorOperationCompleted == null)) {
                this.AuthenticateVisitorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateVisitorOperationCompleted);
            }
            this.InvokeAsync("AuthenticateVisitor", new object[] {
                        visitorKey}, this.AuthenticateVisitorOperationCompleted, userState);
        }
        
        private void OnAuthenticateVisitorOperationCompleted(object arg) {
            if ((this.AuthenticateVisitorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateVisitorCompleted(this, new AuthenticateVisitorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetVisitorKey", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVisitorKey() {
            object[] results = this.Invoke("GetVisitorKey", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVisitorKeyAsync() {
            this.GetVisitorKeyAsync(null);
        }
        
        /// <remarks/>
        public void GetVisitorKeyAsync(object userState) {
            if ((this.GetVisitorKeyOperationCompleted == null)) {
                this.GetVisitorKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVisitorKeyOperationCompleted);
            }
            this.InvokeAsync("GetVisitorKey", new object[0], this.GetVisitorKeyOperationCompleted, userState);
        }
        
        private void OnGetVisitorKeyOperationCompleted(object arg) {
            if ((this.GetVisitorKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVisitorKeyCompleted(this, new GetVisitorKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/AuthenticatePlain", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AuthenticatePlain(string loginName, string password) {
            object[] results = this.Invoke("AuthenticatePlain", new object[] {
                        loginName,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticatePlainAsync(string loginName, string password) {
            this.AuthenticatePlainAsync(loginName, password, null);
        }
        
        /// <remarks/>
        public void AuthenticatePlainAsync(string loginName, string password, object userState) {
            if ((this.AuthenticatePlainOperationCompleted == null)) {
                this.AuthenticatePlainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticatePlainOperationCompleted);
            }
            this.InvokeAsync("AuthenticatePlain", new object[] {
                        loginName,
                        password}, this.AuthenticatePlainOperationCompleted, userState);
        }
        
        private void OnAuthenticatePlainOperationCompleted(object arg) {
            if ((this.AuthenticatePlainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticatePlainCompleted(this, new AuthenticatePlainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetChallenge", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AuthChallenge GetChallenge(string loginName) {
            object[] results = this.Invoke("GetChallenge", new object[] {
                        loginName});
            return ((AuthChallenge)(results[0]));
        }
        
        /// <remarks/>
        public void GetChallengeAsync(string loginName) {
            this.GetChallengeAsync(loginName, null);
        }
        
        /// <remarks/>
        public void GetChallengeAsync(string loginName, object userState) {
            if ((this.GetChallengeOperationCompleted == null)) {
                this.GetChallengeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetChallengeOperationCompleted);
            }
            this.InvokeAsync("GetChallenge", new object[] {
                        loginName}, this.GetChallengeOperationCompleted, userState);
        }
        
        private void OnGetChallengeOperationCompleted(object arg) {
            if ((this.GetChallengeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetChallengeCompleted(this, new GetChallengeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/Authenticate", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Authenticate([System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] challenge, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] proof) {
            object[] results = this.Invoke("Authenticate", new object[] {
                        challenge,
                        proof});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AuthenticateAsync(byte[] challenge, byte[] proof) {
            this.AuthenticateAsync(challenge, proof, null);
        }
        
        /// <remarks/>
        public void AuthenticateAsync(byte[] challenge, byte[] proof, object userState) {
            if ((this.AuthenticateOperationCompleted == null)) {
                this.AuthenticateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAuthenticateOperationCompleted);
            }
            this.InvokeAsync("Authenticate", new object[] {
                        challenge,
                        proof}, this.AuthenticateOperationCompleted, userState);
        }
        
        private void OnAuthenticateOperationCompleted(object arg) {
            if ((this.AuthenticateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadPrivateProfile", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User LoadPrivateProfile() {
            object[] results = this.Invoke("LoadPrivateProfile", new object[0]);
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPrivateProfileAsync() {
            this.LoadPrivateProfileAsync(null);
        }
        
        /// <remarks/>
        public void LoadPrivateProfileAsync(object userState) {
            if ((this.LoadPrivateProfileOperationCompleted == null)) {
                this.LoadPrivateProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPrivateProfileOperationCompleted);
            }
            this.InvokeAsync("LoadPrivateProfile", new object[0], this.LoadPrivateProfileOperationCompleted, userState);
        }
        
        private void OnLoadPrivateProfileOperationCompleted(object arg) {
            if ((this.LoadPrivateProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPrivateProfileCompleted(this, new LoadPrivateProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadPublicProfile", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User LoadPublicProfile(string loginName) {
            object[] results = this.Invoke("LoadPublicProfile", new object[] {
                        loginName});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPublicProfileAsync(string loginName) {
            this.LoadPublicProfileAsync(loginName, null);
        }
        
        /// <remarks/>
        public void LoadPublicProfileAsync(string loginName, object userState) {
            if ((this.LoadPublicProfileOperationCompleted == null)) {
                this.LoadPublicProfileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPublicProfileOperationCompleted);
            }
            this.InvokeAsync("LoadPublicProfile", new object[] {
                        loginName}, this.LoadPublicProfileOperationCompleted, userState);
        }
        
        private void OnLoadPublicProfileOperationCompleted(object arg) {
            if ((this.LoadPublicProfileCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPublicProfileCompleted(this, new LoadPublicProfileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadGroupHierarchy", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group LoadGroupHierarchy(string loginName) {
            object[] results = this.Invoke("LoadGroupHierarchy", new object[] {
                        loginName});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void LoadGroupHierarchyAsync(string loginName) {
            this.LoadGroupHierarchyAsync(loginName, null);
        }
        
        /// <remarks/>
        public void LoadGroupHierarchyAsync(string loginName, object userState) {
            if ((this.LoadGroupHierarchyOperationCompleted == null)) {
                this.LoadGroupHierarchyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadGroupHierarchyOperationCompleted);
            }
            this.InvokeAsync("LoadGroupHierarchy", new object[] {
                        loginName}, this.LoadGroupHierarchyOperationCompleted, userState);
        }
        
        private void OnLoadGroupHierarchyOperationCompleted(object arg) {
            if ((this.LoadGroupHierarchyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadGroupHierarchyCompleted(this, new LoadGroupHierarchyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadGroup", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group LoadGroup(long groupId, InformationLevel level, bool includeChildren) {
            object[] results = this.Invoke("LoadGroup", new object[] {
                        groupId,
                        level,
                        includeChildren});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void LoadGroupAsync(long groupId, InformationLevel level, bool includeChildren) {
            this.LoadGroupAsync(groupId, level, includeChildren, null);
        }
        
        /// <remarks/>
        public void LoadGroupAsync(long groupId, InformationLevel level, bool includeChildren, object userState) {
            if ((this.LoadGroupOperationCompleted == null)) {
                this.LoadGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadGroupOperationCompleted);
            }
            this.InvokeAsync("LoadGroup", new object[] {
                        groupId,
                        level,
                        includeChildren}, this.LoadGroupOperationCompleted, userState);
        }
        
        private void OnLoadGroupOperationCompleted(object arg) {
            if ((this.LoadGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadGroupCompleted(this, new LoadGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadAccessRealm", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccessDescriptor LoadAccessRealm(long realmId) {
            object[] results = this.Invoke("LoadAccessRealm", new object[] {
                        realmId});
            return ((AccessDescriptor)(results[0]));
        }
        
        /// <remarks/>
        public void LoadAccessRealmAsync(long realmId) {
            this.LoadAccessRealmAsync(realmId, null);
        }
        
        /// <remarks/>
        public void LoadAccessRealmAsync(long realmId, object userState) {
            if ((this.LoadAccessRealmOperationCompleted == null)) {
                this.LoadAccessRealmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadAccessRealmOperationCompleted);
            }
            this.InvokeAsync("LoadAccessRealm", new object[] {
                        realmId}, this.LoadAccessRealmOperationCompleted, userState);
        }
        
        private void OnLoadAccessRealmOperationCompleted(object arg) {
            if ((this.LoadAccessRealmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadAccessRealmCompleted(this, new LoadAccessRealmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadPhotoSet", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoSet LoadPhotoSet(long photoSetId, InformationLevel level, bool includePhotos) {
            object[] results = this.Invoke("LoadPhotoSet", new object[] {
                        photoSetId,
                        level,
                        includePhotos});
            return ((PhotoSet)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPhotoSetAsync(long photoSetId, InformationLevel level, bool includePhotos) {
            this.LoadPhotoSetAsync(photoSetId, level, includePhotos, null);
        }
        
        /// <remarks/>
        public void LoadPhotoSetAsync(long photoSetId, InformationLevel level, bool includePhotos, object userState) {
            if ((this.LoadPhotoSetOperationCompleted == null)) {
                this.LoadPhotoSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPhotoSetOperationCompleted);
            }
            this.InvokeAsync("LoadPhotoSet", new object[] {
                        photoSetId,
                        level,
                        includePhotos}, this.LoadPhotoSetOperationCompleted, userState);
        }
        
        private void OnLoadPhotoSetOperationCompleted(object arg) {
            if ((this.LoadPhotoSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPhotoSetCompleted(this, new LoadPhotoSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadPhotoSetPhotoSizes", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoSize[] LoadPhotoSetPhotoSizes(long photoSetId, int startingIndex, int numberOfPhotos) {
            object[] results = this.Invoke("LoadPhotoSetPhotoSizes", new object[] {
                        photoSetId,
                        startingIndex,
                        numberOfPhotos});
            return ((PhotoSize[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadPhotoSetPhotoSizesAsync(long photoSetId, int startingIndex, int numberOfPhotos) {
            this.LoadPhotoSetPhotoSizesAsync(photoSetId, startingIndex, numberOfPhotos, null);
        }
        
        /// <remarks/>
        public void LoadPhotoSetPhotoSizesAsync(long photoSetId, int startingIndex, int numberOfPhotos, object userState) {
            if ((this.LoadPhotoSetPhotoSizesOperationCompleted == null)) {
                this.LoadPhotoSetPhotoSizesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPhotoSetPhotoSizesOperationCompleted);
            }
            this.InvokeAsync("LoadPhotoSetPhotoSizes", new object[] {
                        photoSetId,
                        startingIndex,
                        numberOfPhotos}, this.LoadPhotoSetPhotoSizesOperationCompleted, userState);
        }
        
        private void OnLoadPhotoSetPhotoSizesOperationCompleted(object arg) {
            if ((this.LoadPhotoSetPhotoSizesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPhotoSetPhotoSizesCompleted(this, new LoadPhotoSetPhotoSizesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadPhotoSetPhotos", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo[] LoadPhotoSetPhotos(long photoSetId, int startingIndex, int numberOfPhotos) {
            object[] results = this.Invoke("LoadPhotoSetPhotos", new object[] {
                        photoSetId,
                        startingIndex,
                        numberOfPhotos});
            return ((Photo[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadPhotoSetPhotosAsync(long photoSetId, int startingIndex, int numberOfPhotos) {
            this.LoadPhotoSetPhotosAsync(photoSetId, startingIndex, numberOfPhotos, null);
        }
        
        /// <remarks/>
        public void LoadPhotoSetPhotosAsync(long photoSetId, int startingIndex, int numberOfPhotos, object userState) {
            if ((this.LoadPhotoSetPhotosOperationCompleted == null)) {
                this.LoadPhotoSetPhotosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPhotoSetPhotosOperationCompleted);
            }
            this.InvokeAsync("LoadPhotoSetPhotos", new object[] {
                        photoSetId,
                        startingIndex,
                        numberOfPhotos}, this.LoadPhotoSetPhotosOperationCompleted, userState);
        }
        
        private void OnLoadPhotoSetPhotosOperationCompleted(object arg) {
            if ((this.LoadPhotoSetPhotosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPhotoSetPhotosCompleted(this, new LoadPhotoSetPhotosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadGalleryFiles", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GalleryFile[] LoadGalleryFiles(long photoSetId, int startingIndex, int numberOfFiles) {
            object[] results = this.Invoke("LoadGalleryFiles", new object[] {
                        photoSetId,
                        startingIndex,
                        numberOfFiles});
            return ((GalleryFile[])(results[0]));
        }
        
        /// <remarks/>
        public void LoadGalleryFilesAsync(long photoSetId, int startingIndex, int numberOfFiles) {
            this.LoadGalleryFilesAsync(photoSetId, startingIndex, numberOfFiles, null);
        }
        
        /// <remarks/>
        public void LoadGalleryFilesAsync(long photoSetId, int startingIndex, int numberOfFiles, object userState) {
            if ((this.LoadGalleryFilesOperationCompleted == null)) {
                this.LoadGalleryFilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadGalleryFilesOperationCompleted);
            }
            this.InvokeAsync("LoadGalleryFiles", new object[] {
                        photoSetId,
                        startingIndex,
                        numberOfFiles}, this.LoadGalleryFilesOperationCompleted, userState);
        }
        
        private void OnLoadGalleryFilesOperationCompleted(object arg) {
            if ((this.LoadGalleryFilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadGalleryFilesCompleted(this, new LoadGalleryFilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/LoadPhoto", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo LoadPhoto(long photoId, InformationLevel level) {
            object[] results = this.Invoke("LoadPhoto", new object[] {
                        photoId,
                        level});
            return ((Photo)(results[0]));
        }
        
        /// <remarks/>
        public void LoadPhotoAsync(long photoId, InformationLevel level) {
            this.LoadPhotoAsync(photoId, level, null);
        }
        
        /// <remarks/>
        public void LoadPhotoAsync(long photoId, InformationLevel level, object userState) {
            if ((this.LoadPhotoOperationCompleted == null)) {
                this.LoadPhotoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoadPhotoOperationCompleted);
            }
            this.InvokeAsync("LoadPhoto", new object[] {
                        photoId,
                        level}, this.LoadPhotoOperationCompleted, userState);
        }
        
        private void OnLoadPhotoOperationCompleted(object arg) {
            if ((this.LoadPhotoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoadPhotoCompleted(this, new LoadPhotoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/KeyringAddKeyPlain", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string KeyringAddKeyPlain(string keyring, long realmId, string password) {
            object[] results = this.Invoke("KeyringAddKeyPlain", new object[] {
                        keyring,
                        realmId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void KeyringAddKeyPlainAsync(string keyring, long realmId, string password) {
            this.KeyringAddKeyPlainAsync(keyring, realmId, password, null);
        }
        
        /// <remarks/>
        public void KeyringAddKeyPlainAsync(string keyring, long realmId, string password, object userState) {
            if ((this.KeyringAddKeyPlainOperationCompleted == null)) {
                this.KeyringAddKeyPlainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyringAddKeyPlainOperationCompleted);
            }
            this.InvokeAsync("KeyringAddKeyPlain", new object[] {
                        keyring,
                        realmId,
                        password}, this.KeyringAddKeyPlainOperationCompleted, userState);
        }
        
        private void OnKeyringAddKeyPlainOperationCompleted(object arg) {
            if ((this.KeyringAddKeyPlainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyringAddKeyPlainCompleted(this, new KeyringAddKeyPlainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/KeyringGetUnlockedRealms", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long[] KeyringGetUnlockedRealms(string keyring) {
            object[] results = this.Invoke("KeyringGetUnlockedRealms", new object[] {
                        keyring});
            return ((long[])(results[0]));
        }
        
        /// <remarks/>
        public void KeyringGetUnlockedRealmsAsync(string keyring) {
            this.KeyringGetUnlockedRealmsAsync(keyring, null);
        }
        
        /// <remarks/>
        public void KeyringGetUnlockedRealmsAsync(string keyring, object userState) {
            if ((this.KeyringGetUnlockedRealmsOperationCompleted == null)) {
                this.KeyringGetUnlockedRealmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnKeyringGetUnlockedRealmsOperationCompleted);
            }
            this.InvokeAsync("KeyringGetUnlockedRealms", new object[] {
                        keyring}, this.KeyringGetUnlockedRealmsOperationCompleted, userState);
        }
        
        private void OnKeyringGetUnlockedRealmsOperationCompleted(object arg) {
            if ((this.KeyringGetUnlockedRealmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.KeyringGetUnlockedRealmsCompleted(this, new KeyringGetUnlockedRealmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetDownloadOriginalKey", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDownloadOriginalKey(long[] photoIds, string password) {
            object[] results = this.Invoke("GetDownloadOriginalKey", new object[] {
                        photoIds,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDownloadOriginalKeyAsync(long[] photoIds, string password) {
            this.GetDownloadOriginalKeyAsync(photoIds, password, null);
        }
        
        /// <remarks/>
        public void GetDownloadOriginalKeyAsync(long[] photoIds, string password, object userState) {
            if ((this.GetDownloadOriginalKeyOperationCompleted == null)) {
                this.GetDownloadOriginalKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDownloadOriginalKeyOperationCompleted);
            }
            this.InvokeAsync("GetDownloadOriginalKey", new object[] {
                        photoIds,
                        password}, this.GetDownloadOriginalKeyOperationCompleted, userState);
        }
        
        private void OnGetDownloadOriginalKeyOperationCompleted(object arg) {
            if ((this.GetDownloadOriginalKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDownloadOriginalKeyCompleted(this, new GetDownloadOriginalKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetCategories", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Category[] GetCategories() {
            object[] results = this.Invoke("GetCategories", new object[0]);
            return ((Category[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCategoriesAsync() {
            this.GetCategoriesAsync(null);
        }
        
        /// <remarks/>
        public void GetCategoriesAsync(object userState) {
            if ((this.GetCategoriesOperationCompleted == null)) {
                this.GetCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCategoriesOperationCompleted);
            }
            this.InvokeAsync("GetCategories", new object[0], this.GetCategoriesOperationCompleted, userState);
        }
        
        private void OnGetCategoriesOperationCompleted(object arg) {
            if ((this.GetCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCategoriesCompleted(this, new GetCategoriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/SearchSetByCategory", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoSetResult SearchSetByCategory(string searchId, PhotoSetType type, SortOrder sortOrder, int categoryCode, int offset, int limit) {
            object[] results = this.Invoke("SearchSetByCategory", new object[] {
                        searchId,
                        type,
                        sortOrder,
                        categoryCode,
                        offset,
                        limit});
            return ((PhotoSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void SearchSetByCategoryAsync(string searchId, PhotoSetType type, SortOrder sortOrder, int categoryCode, int offset, int limit) {
            this.SearchSetByCategoryAsync(searchId, type, sortOrder, categoryCode, offset, limit, null);
        }
        
        /// <remarks/>
        public void SearchSetByCategoryAsync(string searchId, PhotoSetType type, SortOrder sortOrder, int categoryCode, int offset, int limit, object userState) {
            if ((this.SearchSetByCategoryOperationCompleted == null)) {
                this.SearchSetByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchSetByCategoryOperationCompleted);
            }
            this.InvokeAsync("SearchSetByCategory", new object[] {
                        searchId,
                        type,
                        sortOrder,
                        categoryCode,
                        offset,
                        limit}, this.SearchSetByCategoryOperationCompleted, userState);
        }
        
        private void OnSearchSetByCategoryOperationCompleted(object arg) {
            if ((this.SearchSetByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchSetByCategoryCompleted(this, new SearchSetByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/SearchSetByText", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoSetResult SearchSetByText(string searchId, PhotoSetType type, SortOrder sortOrder, string query, int offset, int limit) {
            object[] results = this.Invoke("SearchSetByText", new object[] {
                        searchId,
                        type,
                        sortOrder,
                        query,
                        offset,
                        limit});
            return ((PhotoSetResult)(results[0]));
        }
        
        /// <remarks/>
        public void SearchSetByTextAsync(string searchId, PhotoSetType type, SortOrder sortOrder, string query, int offset, int limit) {
            this.SearchSetByTextAsync(searchId, type, sortOrder, query, offset, limit, null);
        }
        
        /// <remarks/>
        public void SearchSetByTextAsync(string searchId, PhotoSetType type, SortOrder sortOrder, string query, int offset, int limit, object userState) {
            if ((this.SearchSetByTextOperationCompleted == null)) {
                this.SearchSetByTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchSetByTextOperationCompleted);
            }
            this.InvokeAsync("SearchSetByText", new object[] {
                        searchId,
                        type,
                        sortOrder,
                        query,
                        offset,
                        limit}, this.SearchSetByTextOperationCompleted, userState);
        }
        
        private void OnSearchSetByTextOperationCompleted(object arg) {
            if ((this.SearchSetByTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchSetByTextCompleted(this, new SearchSetByTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetPopularSets", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoSet[] GetPopularSets(PhotoSetType type, int offset, int limit) {
            object[] results = this.Invoke("GetPopularSets", new object[] {
                        type,
                        offset,
                        limit});
            return ((PhotoSet[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPopularSetsAsync(PhotoSetType type, int offset, int limit) {
            this.GetPopularSetsAsync(type, offset, limit, null);
        }
        
        /// <remarks/>
        public void GetPopularSetsAsync(PhotoSetType type, int offset, int limit, object userState) {
            if ((this.GetPopularSetsOperationCompleted == null)) {
                this.GetPopularSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPopularSetsOperationCompleted);
            }
            this.InvokeAsync("GetPopularSets", new object[] {
                        type,
                        offset,
                        limit}, this.GetPopularSetsOperationCompleted, userState);
        }
        
        private void OnGetPopularSetsOperationCompleted(object arg) {
            if ((this.GetPopularSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPopularSetsCompleted(this, new GetPopularSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetRecentSets", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoSet[] GetRecentSets(PhotoSetType type, int offset, int limit) {
            object[] results = this.Invoke("GetRecentSets", new object[] {
                        type,
                        offset,
                        limit});
            return ((PhotoSet[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecentSetsAsync(PhotoSetType type, int offset, int limit) {
            this.GetRecentSetsAsync(type, offset, limit, null);
        }
        
        /// <remarks/>
        public void GetRecentSetsAsync(PhotoSetType type, int offset, int limit, object userState) {
            if ((this.GetRecentSetsOperationCompleted == null)) {
                this.GetRecentSetsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecentSetsOperationCompleted);
            }
            this.InvokeAsync("GetRecentSets", new object[] {
                        type,
                        offset,
                        limit}, this.GetRecentSetsOperationCompleted, userState);
        }
        
        private void OnGetRecentSetsOperationCompleted(object arg) {
            if ((this.GetRecentSetsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecentSetsCompleted(this, new GetRecentSetsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/SearchPhotoByCategory", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoResult SearchPhotoByCategory(string searchId, SortOrder sortOrder, int categoryCode, int offset, int limit) {
            object[] results = this.Invoke("SearchPhotoByCategory", new object[] {
                        searchId,
                        sortOrder,
                        categoryCode,
                        offset,
                        limit});
            return ((PhotoResult)(results[0]));
        }
        
        /// <remarks/>
        public void SearchPhotoByCategoryAsync(string searchId, SortOrder sortOrder, int categoryCode, int offset, int limit) {
            this.SearchPhotoByCategoryAsync(searchId, sortOrder, categoryCode, offset, limit, null);
        }
        
        /// <remarks/>
        public void SearchPhotoByCategoryAsync(string searchId, SortOrder sortOrder, int categoryCode, int offset, int limit, object userState) {
            if ((this.SearchPhotoByCategoryOperationCompleted == null)) {
                this.SearchPhotoByCategoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPhotoByCategoryOperationCompleted);
            }
            this.InvokeAsync("SearchPhotoByCategory", new object[] {
                        searchId,
                        sortOrder,
                        categoryCode,
                        offset,
                        limit}, this.SearchPhotoByCategoryOperationCompleted, userState);
        }
        
        private void OnSearchPhotoByCategoryOperationCompleted(object arg) {
            if ((this.SearchPhotoByCategoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPhotoByCategoryCompleted(this, new SearchPhotoByCategoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/SearchPhotoByText", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PhotoResult SearchPhotoByText(string searchId, SortOrder sortOrder, string query, int offset, int limit) {
            object[] results = this.Invoke("SearchPhotoByText", new object[] {
                        searchId,
                        sortOrder,
                        query,
                        offset,
                        limit});
            return ((PhotoResult)(results[0]));
        }
        
        /// <remarks/>
        public void SearchPhotoByTextAsync(string searchId, SortOrder sortOrder, string query, int offset, int limit) {
            this.SearchPhotoByTextAsync(searchId, sortOrder, query, offset, limit, null);
        }
        
        /// <remarks/>
        public void SearchPhotoByTextAsync(string searchId, SortOrder sortOrder, string query, int offset, int limit, object userState) {
            if ((this.SearchPhotoByTextOperationCompleted == null)) {
                this.SearchPhotoByTextOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchPhotoByTextOperationCompleted);
            }
            this.InvokeAsync("SearchPhotoByText", new object[] {
                        searchId,
                        sortOrder,
                        query,
                        offset,
                        limit}, this.SearchPhotoByTextOperationCompleted, userState);
        }
        
        private void OnSearchPhotoByTextOperationCompleted(object arg) {
            if ((this.SearchPhotoByTextCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchPhotoByTextCompleted(this, new SearchPhotoByTextCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetPopularPhotos", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo[] GetPopularPhotos(int offset, int limit) {
            object[] results = this.Invoke("GetPopularPhotos", new object[] {
                        offset,
                        limit});
            return ((Photo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPopularPhotosAsync(int offset, int limit) {
            this.GetPopularPhotosAsync(offset, limit, null);
        }
        
        /// <remarks/>
        public void GetPopularPhotosAsync(int offset, int limit, object userState) {
            if ((this.GetPopularPhotosOperationCompleted == null)) {
                this.GetPopularPhotosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPopularPhotosOperationCompleted);
            }
            this.InvokeAsync("GetPopularPhotos", new object[] {
                        offset,
                        limit}, this.GetPopularPhotosOperationCompleted, userState);
        }
        
        private void OnGetPopularPhotosOperationCompleted(object arg) {
            if ((this.GetPopularPhotosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPopularPhotosCompleted(this, new GetPopularPhotosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/GetRecentPhotos", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Photo[] GetRecentPhotos(int offset, int limit) {
            object[] results = this.Invoke("GetRecentPhotos", new object[] {
                        offset,
                        limit});
            return ((Photo[])(results[0]));
        }
        
        /// <remarks/>
        public void GetRecentPhotosAsync(int offset, int limit) {
            this.GetRecentPhotosAsync(offset, limit, null);
        }
        
        /// <remarks/>
        public void GetRecentPhotosAsync(int offset, int limit, object userState) {
            if ((this.GetRecentPhotosOperationCompleted == null)) {
                this.GetRecentPhotosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRecentPhotosOperationCompleted);
            }
            this.InvokeAsync("GetRecentPhotos", new object[] {
                        offset,
                        limit}, this.GetRecentPhotosOperationCompleted, userState);
        }
        
        private void OnGetRecentPhotosOperationCompleted(object arg) {
            if ((this.GetRecentPhotosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRecentPhotosCompleted(this, new GetRecentPhotosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CreateGroup", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group CreateGroup(long parentId, GroupUpdater updater) {
            object[] results = this.Invoke("CreateGroup", new object[] {
                        parentId,
                        updater});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void CreateGroupAsync(long parentId, GroupUpdater updater) {
            this.CreateGroupAsync(parentId, updater, null);
        }
        
        /// <remarks/>
        public void CreateGroupAsync(long parentId, GroupUpdater updater, object userState) {
            if ((this.CreateGroupOperationCompleted == null)) {
                this.CreateGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateGroupOperationCompleted);
            }
            this.InvokeAsync("CreateGroup", new object[] {
                        parentId,
                        updater}, this.CreateGroupOperationCompleted, userState);
        }
        
        private void OnCreateGroupOperationCompleted(object arg) {
            if ((this.CreateGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateGroupCompleted(this, new CreateGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/DeleteGroup", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteGroup(long groupId) {
            this.Invoke("DeleteGroup", new object[] {
                        groupId});
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(long groupId) {
            this.DeleteGroupAsync(groupId, null);
        }
        
        /// <remarks/>
        public void DeleteGroupAsync(long groupId, object userState) {
            if ((this.DeleteGroupOperationCompleted == null)) {
                this.DeleteGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteGroup", new object[] {
                        groupId}, this.DeleteGroupOperationCompleted, userState);
        }
        
        private void OnDeleteGroupOperationCompleted(object arg) {
            if ((this.DeleteGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CreatePhotoFromUrl", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreatePhotoFromUrl(long galleryId, string url, string cookies) {
            object[] results = this.Invoke("CreatePhotoFromUrl", new object[] {
                        galleryId,
                        url,
                        cookies});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePhotoFromUrlAsync(long galleryId, string url, string cookies) {
            this.CreatePhotoFromUrlAsync(galleryId, url, cookies, null);
        }
        
        /// <remarks/>
        public void CreatePhotoFromUrlAsync(long galleryId, string url, string cookies, object userState) {
            if ((this.CreatePhotoFromUrlOperationCompleted == null)) {
                this.CreatePhotoFromUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePhotoFromUrlOperationCompleted);
            }
            this.InvokeAsync("CreatePhotoFromUrl", new object[] {
                        galleryId,
                        url,
                        cookies}, this.CreatePhotoFromUrlOperationCompleted, userState);
        }
        
        private void OnCreatePhotoFromUrlOperationCompleted(object arg) {
            if ((this.CreatePhotoFromUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePhotoFromUrlCompleted(this, new CreatePhotoFromUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.zenfolio.com/api/1.8/CreateVideoFromUrl", RequestNamespace="http://www.zenfolio.com/api/1.8", ResponseNamespace="http://www.zenfolio.com/api/1.8", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long CreateVideoFromUrl(long galleryId, string url, string cookies) {
            object[] results = this.Invoke("CreateVideoFromUrl", new object[] {
                        galleryId,
                        url,
                        cookies});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void CreateVideoFromUrlAsync(long galleryId, string url, string cookies) {
            this.CreateVideoFromUrlAsync(galleryId, url, cookies, null);
        }
        
        /// <remarks/>
        public void CreateVideoFromUrlAsync(long galleryId, string url, string cookies, object userState) {
            if ((this.CreateVideoFromUrlOperationCompleted == null)) {
                this.CreateVideoFromUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateVideoFromUrlOperationCompleted);
            }
            this.InvokeAsync("CreateVideoFromUrl", new object[] {
                        galleryId,
                        url,
                        cookies}, this.CreateVideoFromUrlOperationCompleted, userState);
        }
        
        private void OnCreateVideoFromUrlOperationCompleted(object arg) {
            if ((this.CreateVideoFromUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateVideoFromUrlCompleted(this, new CreateVideoFromUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class GroupUpdater {
        
        private string titleField;
        
        private string captionField;
        
        private string customReferenceField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public string CustomReference {
            get {
                return this.customReferenceField;
            }
            set {
                this.customReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class PhotoResult {
        
        private Photo[] photosField;
        
        private int totalCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Photo[] Photos {
            get {
                return this.photosField;
            }
            set {
                this.photosField = value;
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class Photo {
        
        private long idField;
        
        private uint widthField;
        
        private bool widthFieldSpecified;
        
        private uint heightField;
        
        private bool heightFieldSpecified;
        
        private string sequenceField;
        
        private AccessDescriptor accessDescriptorField;
        
        private string titleField;
        
        private string captionField;
        
        private string fileNameField;
        
        private System.DateTime uploadedOnField;
        
        private bool uploadedOnFieldSpecified;
        
        private System.DateTime takenOnField;
        
        private bool takenOnFieldSpecified;
        
        private string ownerField;
        
        private long galleryField;
        
        private bool galleryFieldSpecified;
        
        private int viewsField;
        
        private bool viewsFieldSpecified;
        
        private int sizeField;
        
        private bool sizeFieldSpecified;
        
        private PhotoRotation rotationField;
        
        private bool rotationFieldSpecified;
        
        private string[] keywordsField;
        
        private int[] categoriesField;
        
        private PhotoFlags flagsField;
        
        private bool flagsFieldSpecified;
        
        private int textCnField;
        
        private bool textCnFieldSpecified;
        
        private long pricingKeyField;
        
        private bool pricingKeyFieldSpecified;
        
        private string mimeTypeField;
        
        private string originalUrlField;
        
        private string urlCoreField;
        
        private string urlHostField;
        
        private string urlTokenField;
        
        private string copyrightField;
        
        private string pageUrlField;
        
        private ExifTag[] exifTagsField;
        
        private string shortExifField;
        
        private string mailboxIdField;
        
        private bool isVideoField;
        
        private int durationField;
        
        private bool durationFieldSpecified;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public uint Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WidthSpecified {
            get {
                return this.widthFieldSpecified;
            }
            set {
                this.widthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public uint Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HeightSpecified {
            get {
                return this.heightFieldSpecified;
            }
            set {
                this.heightFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public AccessDescriptor AccessDescriptor {
            get {
                return this.accessDescriptorField;
            }
            set {
                this.accessDescriptorField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UploadedOn {
            get {
                return this.uploadedOnField;
            }
            set {
                this.uploadedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UploadedOnSpecified {
            get {
                return this.uploadedOnFieldSpecified;
            }
            set {
                this.uploadedOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime TakenOn {
            get {
                return this.takenOnField;
            }
            set {
                this.takenOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TakenOnSpecified {
            get {
                return this.takenOnFieldSpecified;
            }
            set {
                this.takenOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public long Gallery {
            get {
                return this.galleryField;
            }
            set {
                this.galleryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GallerySpecified {
            get {
                return this.galleryFieldSpecified;
            }
            set {
                this.galleryFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Views {
            get {
                return this.viewsField;
            }
            set {
                this.viewsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ViewsSpecified {
            get {
                return this.viewsFieldSpecified;
            }
            set {
                this.viewsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PhotoRotation Rotation {
            get {
                return this.rotationField;
            }
            set {
                this.rotationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RotationSpecified {
            get {
                return this.rotationFieldSpecified;
            }
            set {
                this.rotationFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public string[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Category", IsNullable=false)]
        public int[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public PhotoFlags Flags {
            get {
                return this.flagsField;
            }
            set {
                this.flagsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FlagsSpecified {
            get {
                return this.flagsFieldSpecified;
            }
            set {
                this.flagsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int TextCn {
            get {
                return this.textCnField;
            }
            set {
                this.textCnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextCnSpecified {
            get {
                return this.textCnFieldSpecified;
            }
            set {
                this.textCnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long PricingKey {
            get {
                return this.pricingKeyField;
            }
            set {
                this.pricingKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PricingKeySpecified {
            get {
                return this.pricingKeyFieldSpecified;
            }
            set {
                this.pricingKeyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalUrl {
            get {
                return this.originalUrlField;
            }
            set {
                this.originalUrlField = value;
            }
        }
        
        /// <remarks/>
        public string UrlCore {
            get {
                return this.urlCoreField;
            }
            set {
                this.urlCoreField = value;
            }
        }
        
        /// <remarks/>
        public string UrlHost {
            get {
                return this.urlHostField;
            }
            set {
                this.urlHostField = value;
            }
        }
        
        /// <remarks/>
        public string UrlToken {
            get {
                return this.urlTokenField;
            }
            set {
                this.urlTokenField = value;
            }
        }
        
        /// <remarks/>
        public string Copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
            }
        }
        
        /// <remarks/>
        public string PageUrl {
            get {
                return this.pageUrlField;
            }
            set {
                this.pageUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ExifTags")]
        public ExifTag[] ExifTags {
            get {
                return this.exifTagsField;
            }
            set {
                this.exifTagsField = value;
            }
        }
        
        /// <remarks/>
        public string ShortExif {
            get {
                return this.shortExifField;
            }
            set {
                this.shortExifField = value;
            }
        }
        
        /// <remarks/>
        public string MailboxId {
            get {
                return this.mailboxIdField;
            }
            set {
                this.mailboxIdField = value;
            }
        }
        
        /// <remarks/>
        public bool IsVideo {
            get {
                return this.isVideoField;
            }
            set {
                this.isVideoField = value;
            }
        }
        
        /// <remarks/>
        public int Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DurationSpecified {
            get {
                return this.durationFieldSpecified;
            }
            set {
                this.durationFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class AccessDescriptor {
        
        private long realmIdField;
        
        private AccessType accessTypeField;
        
        private bool isDerivedField;
        
        private ApiAccessMask accessMaskField;
        
        private string[] viewersField;
        
        private string passwordHintField;
        
        private string srcPasswordHintField;
        
        /// <remarks/>
        public long RealmId {
            get {
                return this.realmIdField;
            }
            set {
                this.realmIdField = value;
            }
        }
        
        /// <remarks/>
        public AccessType AccessType {
            get {
                return this.accessTypeField;
            }
            set {
                this.accessTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDerived {
            get {
                return this.isDerivedField;
            }
            set {
                this.isDerivedField = value;
            }
        }
        
        /// <remarks/>
        public ApiAccessMask AccessMask {
            get {
                return this.accessMaskField;
            }
            set {
                this.accessMaskField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Viewer", IsNullable=false)]
        public string[] Viewers {
            get {
                return this.viewersField;
            }
            set {
                this.viewersField = value;
            }
        }
        
        /// <remarks/>
        public string PasswordHint {
            get {
                return this.passwordHintField;
            }
            set {
                this.passwordHintField = value;
            }
        }
        
        /// <remarks/>
        public string SrcPasswordHint {
            get {
                return this.srcPasswordHintField;
            }
            set {
                this.srcPasswordHintField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum AccessType {
        
        /// <remarks/>
        Private,
        
        /// <remarks/>
        UserList,
        
        /// <remarks/>
        Password,
        
        /// <remarks/>
        Public,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum ApiAccessMask {
        
        /// <remarks/>
        ProtectAll = 1,
        
        /// <remarks/>
        NoCollections = 2,
        
        /// <remarks/>
        None = 4,
        
        /// <remarks/>
        NoPrivateSearch = 8,
        
        /// <remarks/>
        NoPublicSearch = 16,
        
        /// <remarks/>
        NoRecentList = 32,
        
        /// <remarks/>
        HideDateCreated = 64,
        
        /// <remarks/>
        HideDateModified = 128,
        
        /// <remarks/>
        HideDateTaken = 256,
        
        /// <remarks/>
        ProtectExif = 512,
        
        /// <remarks/>
        ProtectExtraLarge = 1024,
        
        /// <remarks/>
        ProtectLarge = 2048,
        
        /// <remarks/>
        ProtectMedium = 4096,
        
        /// <remarks/>
        HideMetaData = 8192,
        
        /// <remarks/>
        ProtectOriginals = 16384,
        
        /// <remarks/>
        HideUserStats = 32768,
        
        /// <remarks/>
        HideVisits = 65536,
        
        /// <remarks/>
        NoPublicGuestbookPosts = 131072,
        
        /// <remarks/>
        NoPrivateGuestbookPosts = 262144,
        
        /// <remarks/>
        NoAnonymousGuestbookPosts = 524288,
        
        /// <remarks/>
        NoPublicComments = 1048576,
        
        /// <remarks/>
        NoPrivateComments = 2097152,
        
        /// <remarks/>
        NoAnonymousComments = 4194304,
        
        /// <remarks/>
        ProtectGuestbook = 8388608,
        
        /// <remarks/>
        ProtectComments = 16777216,
        
        /// <remarks/>
        PasswordProtectOriginals = 33554432,
        
        /// <remarks/>
        ProtectXXLarge = 67108864,
        
        /// <remarks/>
        UnprotectCover = 134217728,
        
        /// <remarks/>
        IncludeRawFilesWithOriginals = 268435456,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum PhotoRotation {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Rotate90,
        
        /// <remarks/>
        Rotate180,
        
        /// <remarks/>
        Rotate270,
        
        /// <remarks/>
        Flip,
        
        /// <remarks/>
        Rotate90Flip,
        
        /// <remarks/>
        Rotate180Flip,
        
        /// <remarks/>
        Rotate270Flip,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum PhotoFlags {
        
        /// <remarks/>
        None = 1,
        
        /// <remarks/>
        HasTitle = 2,
        
        /// <remarks/>
        HasCaption = 4,
        
        /// <remarks/>
        HasKeywords = 8,
        
        /// <remarks/>
        HasCategories = 16,
        
        /// <remarks/>
        HasExif = 32,
        
        /// <remarks/>
        HasComments = 64,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class ExifTag {
        
        private int idField;
        
        private string valueField;
        
        private string displayValueField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayValue {
            get {
                return this.displayValueField;
            }
            set {
                this.displayValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class PhotoSetResult {
        
        private PhotoSet[] photoSetsField;
        
        private int totalCountField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PhotoSet[] PhotoSets {
            get {
                return this.photoSetsField;
            }
            set {
                this.photoSetsField = value;
            }
        }
        
        /// <remarks/>
        public int TotalCount {
            get {
                return this.totalCountField;
            }
            set {
                this.totalCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class PhotoSet : GroupElement {
        
        private string captionField;
        
        private System.DateTime createdOnField;
        
        private bool createdOnFieldSpecified;
        
        private System.DateTime modifiedOnField;
        
        private bool modifiedOnFieldSpecified;
        
        private int photoCountField;
        
        private bool photoCountFieldSpecified;
        
        private int imageCountField;
        
        private bool imageCountFieldSpecified;
        
        private int videoCountField;
        
        private bool videoCountFieldSpecified;
        
        private int fileCountField;
        
        private bool fileCountFieldSpecified;
        
        private long photoBytesField;
        
        private bool photoBytesFieldSpecified;
        
        private long fileBytesField;
        
        private bool fileBytesFieldSpecified;
        
        private int viewsField;
        
        private bool viewsFieldSpecified;
        
        private PhotoSetType typeField;
        
        private bool typeFieldSpecified;
        
        private int featuredIndexField;
        
        private bool featuredIndexFieldSpecified;
        
        private Photo titlePhotoField;
        
        private bool isRandomTitlePhotoField;
        
        private bool isRandomTitlePhotoFieldSpecified;
        
        private long[] parentGroupsField;
        
        private Photo[] photosField;
        
        private string[] keywordsField;
        
        private int[] categoriesField;
        
        private string uploadUrlField;
        
        private string videoUploadUrlField;
        
        private string rawUploadUrlField;
        
        private string pageUrlField;
        
        private string mailboxIdField;
        
        private int textCnField;
        
        private bool textCnFieldSpecified;
        
        private int photoListCnField;
        
        private bool photoListCnFieldSpecified;
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedOnSpecified {
            get {
                return this.createdOnFieldSpecified;
            }
            set {
                this.createdOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedOn {
            get {
                return this.modifiedOnField;
            }
            set {
                this.modifiedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModifiedOnSpecified {
            get {
                return this.modifiedOnFieldSpecified;
            }
            set {
                this.modifiedOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PhotoCount {
            get {
                return this.photoCountField;
            }
            set {
                this.photoCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoCountSpecified {
            get {
                return this.photoCountFieldSpecified;
            }
            set {
                this.photoCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ImageCount {
            get {
                return this.imageCountField;
            }
            set {
                this.imageCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageCountSpecified {
            get {
                return this.imageCountFieldSpecified;
            }
            set {
                this.imageCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VideoCount {
            get {
                return this.videoCountField;
            }
            set {
                this.videoCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VideoCountSpecified {
            get {
                return this.videoCountFieldSpecified;
            }
            set {
                this.videoCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FileCount {
            get {
                return this.fileCountField;
            }
            set {
                this.fileCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileCountSpecified {
            get {
                return this.fileCountFieldSpecified;
            }
            set {
                this.fileCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long PhotoBytes {
            get {
                return this.photoBytesField;
            }
            set {
                this.photoBytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoBytesSpecified {
            get {
                return this.photoBytesFieldSpecified;
            }
            set {
                this.photoBytesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long FileBytes {
            get {
                return this.fileBytesField;
            }
            set {
                this.fileBytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FileBytesSpecified {
            get {
                return this.fileBytesFieldSpecified;
            }
            set {
                this.fileBytesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int Views {
            get {
                return this.viewsField;
            }
            set {
                this.viewsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ViewsSpecified {
            get {
                return this.viewsFieldSpecified;
            }
            set {
                this.viewsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public PhotoSetType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TypeSpecified {
            get {
                return this.typeFieldSpecified;
            }
            set {
                this.typeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int FeaturedIndex {
            get {
                return this.featuredIndexField;
            }
            set {
                this.featuredIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FeaturedIndexSpecified {
            get {
                return this.featuredIndexFieldSpecified;
            }
            set {
                this.featuredIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Photo TitlePhoto {
            get {
                return this.titlePhotoField;
            }
            set {
                this.titlePhotoField = value;
            }
        }
        
        /// <remarks/>
        public bool IsRandomTitlePhoto {
            get {
                return this.isRandomTitlePhotoField;
            }
            set {
                this.isRandomTitlePhotoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsRandomTitlePhotoSpecified {
            get {
                return this.isRandomTitlePhotoFieldSpecified;
            }
            set {
                this.isRandomTitlePhotoFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public long[] ParentGroups {
            get {
                return this.parentGroupsField;
            }
            set {
                this.parentGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public Photo[] Photos {
            get {
                return this.photosField;
            }
            set {
                this.photosField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public string[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Category", IsNullable=false)]
        public int[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public string UploadUrl {
            get {
                return this.uploadUrlField;
            }
            set {
                this.uploadUrlField = value;
            }
        }
        
        /// <remarks/>
        public string VideoUploadUrl {
            get {
                return this.videoUploadUrlField;
            }
            set {
                this.videoUploadUrlField = value;
            }
        }
        
        /// <remarks/>
        public string RawUploadUrl {
            get {
                return this.rawUploadUrlField;
            }
            set {
                this.rawUploadUrlField = value;
            }
        }
        
        /// <remarks/>
        public string PageUrl {
            get {
                return this.pageUrlField;
            }
            set {
                this.pageUrlField = value;
            }
        }
        
        /// <remarks/>
        public string MailboxId {
            get {
                return this.mailboxIdField;
            }
            set {
                this.mailboxIdField = value;
            }
        }
        
        /// <remarks/>
        public int TextCn {
            get {
                return this.textCnField;
            }
            set {
                this.textCnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextCnSpecified {
            get {
                return this.textCnFieldSpecified;
            }
            set {
                this.textCnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PhotoListCn {
            get {
                return this.photoListCnField;
            }
            set {
                this.photoListCnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoListCnSpecified {
            get {
                return this.photoListCnFieldSpecified;
            }
            set {
                this.photoListCnFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum PhotoSetType {
        
        /// <remarks/>
        Gallery,
        
        /// <remarks/>
        Collection,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PhotoSet))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Group))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class GroupElement {
        
        private long idField;
        
        private int groupIndexField;
        
        private bool groupIndexFieldSpecified;
        
        private string titleField;
        
        private AccessDescriptor accessDescriptorField;
        
        private string ownerField;
        
        private bool hideBrandingField;
        
        private bool hideBrandingFieldSpecified;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int GroupIndex {
            get {
                return this.groupIndexField;
            }
            set {
                this.groupIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GroupIndexSpecified {
            get {
                return this.groupIndexFieldSpecified;
            }
            set {
                this.groupIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public AccessDescriptor AccessDescriptor {
            get {
                return this.accessDescriptorField;
            }
            set {
                this.accessDescriptorField = value;
            }
        }
        
        /// <remarks/>
        public string Owner {
            get {
                return this.ownerField;
            }
            set {
                this.ownerField = value;
            }
        }
        
        /// <remarks/>
        public bool HideBranding {
            get {
                return this.hideBrandingField;
            }
            set {
                this.hideBrandingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HideBrandingSpecified {
            get {
                return this.hideBrandingFieldSpecified;
            }
            set {
                this.hideBrandingFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class Group : GroupElement {
        
        private string captionField;
        
        private System.DateTime createdOnField;
        
        private bool createdOnFieldSpecified;
        
        private System.DateTime modifiedOnField;
        
        private bool modifiedOnFieldSpecified;
        
        private int collectionCountField;
        
        private bool collectionCountFieldSpecified;
        
        private int subGroupCountField;
        
        private bool subGroupCountFieldSpecified;
        
        private int galleryCountField;
        
        private bool galleryCountFieldSpecified;
        
        private int photoCountField;
        
        private bool photoCountFieldSpecified;
        
        private int imageCountField;
        
        private bool imageCountFieldSpecified;
        
        private int videoCountField;
        
        private bool videoCountFieldSpecified;
        
        private long[] parentGroupsField;
        
        private GroupElement[] elementsField;
        
        private string pageUrlField;
        
        private Photo titlePhotoField;
        
        private string mailboxIdField;
        
        private int textCnField;
        
        private bool textCnFieldSpecified;
        
        private int immediateChildrenCountField;
        
        private bool immediateChildrenCountFieldSpecified;
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CreatedOn {
            get {
                return this.createdOnField;
            }
            set {
                this.createdOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CreatedOnSpecified {
            get {
                return this.createdOnFieldSpecified;
            }
            set {
                this.createdOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ModifiedOn {
            get {
                return this.modifiedOnField;
            }
            set {
                this.modifiedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ModifiedOnSpecified {
            get {
                return this.modifiedOnFieldSpecified;
            }
            set {
                this.modifiedOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CollectionCount {
            get {
                return this.collectionCountField;
            }
            set {
                this.collectionCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CollectionCountSpecified {
            get {
                return this.collectionCountFieldSpecified;
            }
            set {
                this.collectionCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int SubGroupCount {
            get {
                return this.subGroupCountField;
            }
            set {
                this.subGroupCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SubGroupCountSpecified {
            get {
                return this.subGroupCountFieldSpecified;
            }
            set {
                this.subGroupCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int GalleryCount {
            get {
                return this.galleryCountField;
            }
            set {
                this.galleryCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GalleryCountSpecified {
            get {
                return this.galleryCountFieldSpecified;
            }
            set {
                this.galleryCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PhotoCount {
            get {
                return this.photoCountField;
            }
            set {
                this.photoCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoCountSpecified {
            get {
                return this.photoCountFieldSpecified;
            }
            set {
                this.photoCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ImageCount {
            get {
                return this.imageCountField;
            }
            set {
                this.imageCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImageCountSpecified {
            get {
                return this.imageCountFieldSpecified;
            }
            set {
                this.imageCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VideoCount {
            get {
                return this.videoCountField;
            }
            set {
                this.videoCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VideoCountSpecified {
            get {
                return this.videoCountFieldSpecified;
            }
            set {
                this.videoCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Id", IsNullable=false)]
        public long[] ParentGroups {
            get {
                return this.parentGroupsField;
            }
            set {
                this.parentGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(Group), IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute(typeof(PhotoSet), IsNullable=false)]
        public GroupElement[] Elements {
            get {
                return this.elementsField;
            }
            set {
                this.elementsField = value;
            }
        }
        
        /// <remarks/>
        public string PageUrl {
            get {
                return this.pageUrlField;
            }
            set {
                this.pageUrlField = value;
            }
        }
        
        /// <remarks/>
        public Photo TitlePhoto {
            get {
                return this.titlePhotoField;
            }
            set {
                this.titlePhotoField = value;
            }
        }
        
        /// <remarks/>
        public string MailboxId {
            get {
                return this.mailboxIdField;
            }
            set {
                this.mailboxIdField = value;
            }
        }
        
        /// <remarks/>
        public int TextCn {
            get {
                return this.textCnField;
            }
            set {
                this.textCnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TextCnSpecified {
            get {
                return this.textCnFieldSpecified;
            }
            set {
                this.textCnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int ImmediateChildrenCount {
            get {
                return this.immediateChildrenCountField;
            }
            set {
                this.immediateChildrenCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ImmediateChildrenCountSpecified {
            get {
                return this.immediateChildrenCountFieldSpecified;
            }
            set {
                this.immediateChildrenCountFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class Category {
        
        private int codeField;
        
        private string displayNameField;
        
        /// <remarks/>
        public int Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class GalleryFile {
        
        private long idField;
        
        private long sizeField;
        
        private bool sizeFieldSpecified;
        
        private string fileNameField;
        
        private string originalUrlField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public long Size {
            get {
                return this.sizeField;
            }
            set {
                this.sizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SizeSpecified {
            get {
                return this.sizeFieldSpecified;
            }
            set {
                this.sizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalUrl {
            get {
                return this.originalUrlField;
            }
            set {
                this.originalUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class PhotoSize {
        
        private long idField;
        
        private uint widthField;
        
        private uint heightField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public uint Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public uint Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class Address {
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string companyNameField;
        
        private string streetField;
        
        private string street2Field;
        
        private string cityField;
        
        private string zipField;
        
        private string stateField;
        
        private string countryField;
        
        private string phoneField;
        
        private string phone2Field;
        
        private string faxField;
        
        private string urlField;
        
        private string emailField;
        
        private string otherField;
        
        private string facebookUrlField;
        
        private string pinterestUrlField;
        
        private string googleUrlField;
        
        private string blogUrlField;
        
        private string twitterUrlField;
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Street {
            get {
                return this.streetField;
            }
            set {
                this.streetField = value;
            }
        }
        
        /// <remarks/>
        public string Street2 {
            get {
                return this.street2Field;
            }
            set {
                this.street2Field = value;
            }
        }
        
        /// <remarks/>
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Phone2 {
            get {
                return this.phone2Field;
            }
            set {
                this.phone2Field = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Other {
            get {
                return this.otherField;
            }
            set {
                this.otherField = value;
            }
        }
        
        /// <remarks/>
        public string FacebookUrl {
            get {
                return this.facebookUrlField;
            }
            set {
                this.facebookUrlField = value;
            }
        }
        
        /// <remarks/>
        public string PinterestUrl {
            get {
                return this.pinterestUrlField;
            }
            set {
                this.pinterestUrlField = value;
            }
        }
        
        /// <remarks/>
        public string GoogleUrl {
            get {
                return this.googleUrlField;
            }
            set {
                this.googleUrlField = value;
            }
        }
        
        /// <remarks/>
        public string BlogUrl {
            get {
                return this.blogUrlField;
            }
            set {
                this.blogUrlField = value;
            }
        }
        
        /// <remarks/>
        public string TwitterUrl {
            get {
                return this.twitterUrlField;
            }
            set {
                this.twitterUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class File {
        
        private long idField;
        
        private uint widthField;
        
        private uint heightField;
        
        private string sequenceField;
        
        private string mimeTypeField;
        
        private string urlCoreField;
        
        private string urlHostField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public uint Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public uint Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public string Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
            }
        }
        
        /// <remarks/>
        public string UrlCore {
            get {
                return this.urlCoreField;
            }
            set {
                this.urlCoreField = value;
            }
        }
        
        /// <remarks/>
        public string UrlHost {
            get {
                return this.urlHostField;
            }
            set {
                this.urlHostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class User {
        
        private string loginNameField;
        
        private string displayNameField;
        
        private string firstNameField;
        
        private string lastNameField;
        
        private string primaryEmailField;
        
        private File bioPhotoField;
        
        private string bioField;
        
        private int viewsField;
        
        private bool viewsFieldSpecified;
        
        private int galleryCountField;
        
        private bool galleryCountFieldSpecified;
        
        private int collectionCountField;
        
        private bool collectionCountFieldSpecified;
        
        private int photoCountField;
        
        private bool photoCountFieldSpecified;
        
        private long photoBytesField;
        
        private bool photoBytesFieldSpecified;
        
        private int rawFileCountField;
        
        private bool rawFileCountFieldSpecified;
        
        private long rawFileBytesField;
        
        private bool rawFileBytesFieldSpecified;
        
        private System.DateTime userSinceField;
        
        private bool userSinceFieldSpecified;
        
        private System.DateTime lastUpdatedField;
        
        private bool lastUpdatedFieldSpecified;
        
        private Address publicAddressField;
        
        private Address personalAddressField;
        
        private PhotoSet[] recentPhotoSetsField;
        
        private PhotoSet[] featuredPhotoSetsField;
        
        private Group rootGroupField;
        
        private string referralCodeField;
        
        private System.DateTime expiresOnField;
        
        private bool expiresOnFieldSpecified;
        
        private decimal balanceField;
        
        private string domainNameField;
        
        private long storageQuotaField;
        
        private bool storageQuotaFieldSpecified;
        
        private long photoBytesQuotaField;
        
        private bool photoBytesQuotaFieldSpecified;
        
        private long videoBytesQuotaField;
        
        private bool videoBytesQuotaFieldSpecified;
        
        private int videoDurationQuotaField;
        
        private bool videoDurationQuotaFieldSpecified;
        
        private int hierarchyCnField;
        
        private bool hierarchyCnFieldSpecified;
        
        private string homepageUrlField;
        
        private bool rawStorageOptedInField;
        
        private bool rawStorageOptedInFieldSpecified;
        
        private string rawStorageOptInUrlField;
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string PrimaryEmail {
            get {
                return this.primaryEmailField;
            }
            set {
                this.primaryEmailField = value;
            }
        }
        
        /// <remarks/>
        public File BioPhoto {
            get {
                return this.bioPhotoField;
            }
            set {
                this.bioPhotoField = value;
            }
        }
        
        /// <remarks/>
        public string Bio {
            get {
                return this.bioField;
            }
            set {
                this.bioField = value;
            }
        }
        
        /// <remarks/>
        public int Views {
            get {
                return this.viewsField;
            }
            set {
                this.viewsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ViewsSpecified {
            get {
                return this.viewsFieldSpecified;
            }
            set {
                this.viewsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int GalleryCount {
            get {
                return this.galleryCountField;
            }
            set {
                this.galleryCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GalleryCountSpecified {
            get {
                return this.galleryCountFieldSpecified;
            }
            set {
                this.galleryCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int CollectionCount {
            get {
                return this.collectionCountField;
            }
            set {
                this.collectionCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CollectionCountSpecified {
            get {
                return this.collectionCountFieldSpecified;
            }
            set {
                this.collectionCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int PhotoCount {
            get {
                return this.photoCountField;
            }
            set {
                this.photoCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoCountSpecified {
            get {
                return this.photoCountFieldSpecified;
            }
            set {
                this.photoCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long PhotoBytes {
            get {
                return this.photoBytesField;
            }
            set {
                this.photoBytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoBytesSpecified {
            get {
                return this.photoBytesFieldSpecified;
            }
            set {
                this.photoBytesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int RawFileCount {
            get {
                return this.rawFileCountField;
            }
            set {
                this.rawFileCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RawFileCountSpecified {
            get {
                return this.rawFileCountFieldSpecified;
            }
            set {
                this.rawFileCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long RawFileBytes {
            get {
                return this.rawFileBytesField;
            }
            set {
                this.rawFileBytesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RawFileBytesSpecified {
            get {
                return this.rawFileBytesFieldSpecified;
            }
            set {
                this.rawFileBytesFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UserSince {
            get {
                return this.userSinceField;
            }
            set {
                this.userSinceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UserSinceSpecified {
            get {
                return this.userSinceFieldSpecified;
            }
            set {
                this.userSinceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastUpdated {
            get {
                return this.lastUpdatedField;
            }
            set {
                this.lastUpdatedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LastUpdatedSpecified {
            get {
                return this.lastUpdatedFieldSpecified;
            }
            set {
                this.lastUpdatedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public Address PublicAddress {
            get {
                return this.publicAddressField;
            }
            set {
                this.publicAddressField = value;
            }
        }
        
        /// <remarks/>
        public Address PersonalAddress {
            get {
                return this.personalAddressField;
            }
            set {
                this.personalAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PhotoSet[] RecentPhotoSets {
            get {
                return this.recentPhotoSetsField;
            }
            set {
                this.recentPhotoSetsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public PhotoSet[] FeaturedPhotoSets {
            get {
                return this.featuredPhotoSetsField;
            }
            set {
                this.featuredPhotoSetsField = value;
            }
        }
        
        /// <remarks/>
        public Group RootGroup {
            get {
                return this.rootGroupField;
            }
            set {
                this.rootGroupField = value;
            }
        }
        
        /// <remarks/>
        public string ReferralCode {
            get {
                return this.referralCodeField;
            }
            set {
                this.referralCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime ExpiresOn {
            get {
                return this.expiresOnField;
            }
            set {
                this.expiresOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExpiresOnSpecified {
            get {
                return this.expiresOnFieldSpecified;
            }
            set {
                this.expiresOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public decimal Balance {
            get {
                return this.balanceField;
            }
            set {
                this.balanceField = value;
            }
        }
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public long StorageQuota {
            get {
                return this.storageQuotaField;
            }
            set {
                this.storageQuotaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StorageQuotaSpecified {
            get {
                return this.storageQuotaFieldSpecified;
            }
            set {
                this.storageQuotaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long PhotoBytesQuota {
            get {
                return this.photoBytesQuotaField;
            }
            set {
                this.photoBytesQuotaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PhotoBytesQuotaSpecified {
            get {
                return this.photoBytesQuotaFieldSpecified;
            }
            set {
                this.photoBytesQuotaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public long VideoBytesQuota {
            get {
                return this.videoBytesQuotaField;
            }
            set {
                this.videoBytesQuotaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VideoBytesQuotaSpecified {
            get {
                return this.videoBytesQuotaFieldSpecified;
            }
            set {
                this.videoBytesQuotaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int VideoDurationQuota {
            get {
                return this.videoDurationQuotaField;
            }
            set {
                this.videoDurationQuotaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool VideoDurationQuotaSpecified {
            get {
                return this.videoDurationQuotaFieldSpecified;
            }
            set {
                this.videoDurationQuotaFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int HierarchyCn {
            get {
                return this.hierarchyCnField;
            }
            set {
                this.hierarchyCnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool HierarchyCnSpecified {
            get {
                return this.hierarchyCnFieldSpecified;
            }
            set {
                this.hierarchyCnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string HomepageUrl {
            get {
                return this.homepageUrlField;
            }
            set {
                this.homepageUrlField = value;
            }
        }
        
        /// <remarks/>
        public bool RawStorageOptedIn {
            get {
                return this.rawStorageOptedInField;
            }
            set {
                this.rawStorageOptedInField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RawStorageOptedInSpecified {
            get {
                return this.rawStorageOptedInFieldSpecified;
            }
            set {
                this.rawStorageOptedInFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string RawStorageOptInUrl {
            get {
                return this.rawStorageOptInUrlField;
            }
            set {
                this.rawStorageOptInUrlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class AuthChallenge {
        
        private byte[] passwordSaltField;
        
        private byte[] challengeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] PasswordSalt {
            get {
                return this.passwordSaltField;
            }
            set {
                this.passwordSaltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Challenge {
            get {
                return this.challengeField;
            }
            set {
                this.challengeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class ResolveResult {
        
        private string loginNameField;
        
        private Group groupField;
        
        private PhotoSet photoSetField;
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public Group Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public PhotoSet PhotoSet {
            get {
                return this.photoSetField;
            }
            set {
                this.photoSetField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class FavoritesSet {
        
        private long idField;
        
        private int changeNumberField;
        
        private string nameField;
        
        private bool isSharedField;
        
        private System.DateTime sharedOnField;
        
        private bool sharedOnFieldSpecified;
        
        private string sharerNameField;
        
        private string sharerEmailField;
        
        private string sharerMessageField;
        
        /// <remarks/>
        public long Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int ChangeNumber {
            get {
                return this.changeNumberField;
            }
            set {
                this.changeNumberField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool IsShared {
            get {
                return this.isSharedField;
            }
            set {
                this.isSharedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime SharedOn {
            get {
                return this.sharedOnField;
            }
            set {
                this.sharedOnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SharedOnSpecified {
            get {
                return this.sharedOnFieldSpecified;
            }
            set {
                this.sharedOnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string SharerName {
            get {
                return this.sharerNameField;
            }
            set {
                this.sharerNameField = value;
            }
        }
        
        /// <remarks/>
        public string SharerEmail {
            get {
                return this.sharerEmailField;
            }
            set {
                this.sharerEmailField = value;
            }
        }
        
        /// <remarks/>
        public string SharerMessage {
            get {
                return this.sharerMessageField;
            }
            set {
                this.sharerMessageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class MessageUpdater {
        
        private string posterNameField;
        
        private string posterUrlField;
        
        private string posterEmailField;
        
        private string bodyField;
        
        private bool isPrivateField;
        
        /// <remarks/>
        public string PosterName {
            get {
                return this.posterNameField;
            }
            set {
                this.posterNameField = value;
            }
        }
        
        /// <remarks/>
        public string PosterUrl {
            get {
                return this.posterUrlField;
            }
            set {
                this.posterUrlField = value;
            }
        }
        
        /// <remarks/>
        public string PosterEmail {
            get {
                return this.posterEmailField;
            }
            set {
                this.posterEmailField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrivate {
            get {
                return this.isPrivateField;
            }
            set {
                this.isPrivateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class Message {
        
        private string mailboxIdField;
        
        private int indexField;
        
        private System.DateTime postedOnField;
        
        private string posterNameField;
        
        private string posterLoginNaneField;
        
        private string posterUrlField;
        
        private string posterEmailField;
        
        private string bodyField;
        
        private bool isPrivateField;
        
        private bool isPrivateFieldSpecified;
        
        /// <remarks/>
        public string MailboxId {
            get {
                return this.mailboxIdField;
            }
            set {
                this.mailboxIdField = value;
            }
        }
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime PostedOn {
            get {
                return this.postedOnField;
            }
            set {
                this.postedOnField = value;
            }
        }
        
        /// <remarks/>
        public string PosterName {
            get {
                return this.posterNameField;
            }
            set {
                this.posterNameField = value;
            }
        }
        
        /// <remarks/>
        public string PosterLoginNane {
            get {
                return this.posterLoginNaneField;
            }
            set {
                this.posterLoginNaneField = value;
            }
        }
        
        /// <remarks/>
        public string PosterUrl {
            get {
                return this.posterUrlField;
            }
            set {
                this.posterUrlField = value;
            }
        }
        
        /// <remarks/>
        public string PosterEmail {
            get {
                return this.posterEmailField;
            }
            set {
                this.posterEmailField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrivate {
            get {
                return this.isPrivateField;
            }
            set {
                this.isPrivateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPrivateSpecified {
            get {
                return this.isPrivateFieldSpecified;
            }
            set {
                this.isPrivateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class AccessUpdater {
        
        private ApiAccessMask accessMaskField;
        
        private string passwordField;
        
        private string passwordHintField;
        
        private AccessType accessTypeField;
        
        private string[] viewersField;
        
        private bool isDerivedField;
        
        private string originalsPasswordField;
        
        private string originalsPasswordHintField;
        
        /// <remarks/>
        public ApiAccessMask AccessMask {
            get {
                return this.accessMaskField;
            }
            set {
                this.accessMaskField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string PasswordHint {
            get {
                return this.passwordHintField;
            }
            set {
                this.passwordHintField = value;
            }
        }
        
        /// <remarks/>
        public AccessType AccessType {
            get {
                return this.accessTypeField;
            }
            set {
                this.accessTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Viewer", IsNullable=false)]
        public string[] Viewers {
            get {
                return this.viewersField;
            }
            set {
                this.viewersField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDerived {
            get {
                return this.isDerivedField;
            }
            set {
                this.isDerivedField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalsPassword {
            get {
                return this.originalsPasswordField;
            }
            set {
                this.originalsPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string OriginalsPasswordHint {
            get {
                return this.originalsPasswordHintField;
            }
            set {
                this.originalsPasswordHintField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class PhotoUpdater {
        
        private string titleField;
        
        private string captionField;
        
        private string[] keywordsField;
        
        private int[] categoriesField;
        
        private string copyrightField;
        
        private string fileNameField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public string[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Category", IsNullable=false)]
        public int[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public string Copyright {
            get {
                return this.copyrightField;
            }
            set {
                this.copyrightField = value;
            }
        }
        
        /// <remarks/>
        public string FileName {
            get {
                return this.fileNameField;
            }
            set {
                this.fileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public partial class PhotoSetUpdater {
        
        private string titleField;
        
        private string captionField;
        
        private string[] keywordsField;
        
        private int[] categoriesField;
        
        private string customReferenceField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Caption {
            get {
                return this.captionField;
            }
            set {
                this.captionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Keyword", IsNullable=false)]
        public string[] Keywords {
            get {
                return this.keywordsField;
            }
            set {
                this.keywordsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Category", IsNullable=false)]
        public int[] Categories {
            get {
                return this.categoriesField;
            }
            set {
                this.categoriesField = value;
            }
        }
        
        /// <remarks/>
        public string CustomReference {
            get {
                return this.customReferenceField;
            }
            set {
                this.customReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum ShiftOrder {
        
        /// <remarks/>
        CreatedAsc,
        
        /// <remarks/>
        CreatedDesc,
        
        /// <remarks/>
        TakenAsc,
        
        /// <remarks/>
        TakenDesc,
        
        /// <remarks/>
        TitleAsc,
        
        /// <remarks/>
        TitleDesc,
        
        /// <remarks/>
        SizeAsc,
        
        /// <remarks/>
        SizeDesc,
        
        /// <remarks/>
        FileNameAsc,
        
        /// <remarks/>
        FileNameDesc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum GroupShiftOrder {
        
        /// <remarks/>
        CreatedAsc,
        
        /// <remarks/>
        CreatedDesc,
        
        /// <remarks/>
        ModifiedAsc,
        
        /// <remarks/>
        ModifiedDesc,
        
        /// <remarks/>
        TitleAsc,
        
        /// <remarks/>
        TitleDesc,
        
        /// <remarks/>
        GroupsTop,
        
        /// <remarks/>
        GroupsBottom,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum VideoPlaybackMode {
        
        /// <remarks/>
        iOS,
        
        /// <remarks/>
        Flash,
        
        /// <remarks/>
        Http,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum InformationLevel {
        
        /// <remarks/>
        Level1,
        
        /// <remarks/>
        Level2,
        
        /// <remarks/>
        Full,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.zenfolio.com/api/1.8")]
    public enum SortOrder {
        
        /// <remarks/>
        Date,
        
        /// <remarks/>
        Popularity,
        
        /// <remarks/>
        Rank,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateGroupCompletedEventHandler(object sender, UpdateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreatePhotoSetCompletedEventHandler(object sender, CreatePhotoSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePhotoSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePhotoSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeletePhotoSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdatePhotoSetCompletedEventHandler(object sender, UpdatePhotoSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePhotoSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePhotoSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeletePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdatePhotoCompletedEventHandler(object sender, UpdatePhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Photo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Photo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CollectionAddPhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CollectionRemovePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdatePhotoAccessCompletedEventHandler(object sender, UpdatePhotoAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePhotoAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePhotoAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdatePhotoSetAccessCompletedEventHandler(object sender, UpdatePhotoSetAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePhotoSetAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePhotoSetAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateGroupAccessCompletedEventHandler(object sender, UpdateGroupAccessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReorderPhotoSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReindexPhotoSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void MovePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void RotatePhotoCompletedEventHandler(object sender, RotatePhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RotatePhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RotatePhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Photo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Photo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SetGroupTitlePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SetPhotoSetTitlePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SetPhotoSetFeaturedIndexCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void MovePhotoSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReorderGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ReplacePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void MoveGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LinkGalleryFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AutoLinkGalleryFilesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteGalleryFileCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadMessagesCompletedEventHandler(object sender, LoadMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Message[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AddMessageCompletedEventHandler(object sender, AddMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Message Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Message)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UndeleteMessageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CheckPrivilegeCompletedEventHandler(object sender, CheckPrivilegeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPrivilegeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPrivilegeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreateFavoritesSetCompletedEventHandler(object sender, CreateFavoritesSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFavoritesSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateFavoritesSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ShareFavoritesSetCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadSharedFavoritesSetsCompletedEventHandler(object sender, LoadSharedFavoritesSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadSharedFavoritesSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadSharedFavoritesSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FavoritesSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FavoritesSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetVideoPlaybackUrlCompletedEventHandler(object sender, GetVideoPlaybackUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVideoPlaybackUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVideoPlaybackUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ResolveReferenceCompletedEventHandler(object sender, ResolveReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResolveResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResolveResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ResolveUrlCompletedEventHandler(object sender, ResolveUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResolveUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResolveUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResolveResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResolveResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreateQuickBlogPostCompletedEventHandler(object sender, CreateQuickBlogPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateQuickBlogPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateQuickBlogPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void RemoveGroupTitlePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void RemovePhotoSetTitlePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SetRandomPhotoSetTitlePhotoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void MovePhotosCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeletePhotosCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AuthenticateVisitorCompletedEventHandler(object sender, AuthenticateVisitorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateVisitorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateVisitorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetVisitorKeyCompletedEventHandler(object sender, GetVisitorKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVisitorKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVisitorKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AuthenticatePlainCompletedEventHandler(object sender, AuthenticatePlainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticatePlainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticatePlainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetChallengeCompletedEventHandler(object sender, GetChallengeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetChallengeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetChallengeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AuthChallenge Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AuthChallenge)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void AuthenticateCompletedEventHandler(object sender, AuthenticateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadPrivateProfileCompletedEventHandler(object sender, LoadPrivateProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPrivateProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPrivateProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadPublicProfileCompletedEventHandler(object sender, LoadPublicProfileCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPublicProfileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPublicProfileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadGroupHierarchyCompletedEventHandler(object sender, LoadGroupHierarchyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadGroupHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadGroupHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadGroupCompletedEventHandler(object sender, LoadGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadAccessRealmCompletedEventHandler(object sender, LoadAccessRealmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadAccessRealmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadAccessRealmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessDescriptor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessDescriptor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadPhotoSetCompletedEventHandler(object sender, LoadPhotoSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPhotoSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPhotoSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadPhotoSetPhotoSizesCompletedEventHandler(object sender, LoadPhotoSetPhotoSizesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPhotoSetPhotoSizesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPhotoSetPhotoSizesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoSize[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoSize[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadPhotoSetPhotosCompletedEventHandler(object sender, LoadPhotoSetPhotosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPhotoSetPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPhotoSetPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Photo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Photo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadGalleryFilesCompletedEventHandler(object sender, LoadGalleryFilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadGalleryFilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadGalleryFilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GalleryFile[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GalleryFile[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void LoadPhotoCompletedEventHandler(object sender, LoadPhotoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoadPhotoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoadPhotoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Photo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Photo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void KeyringAddKeyPlainCompletedEventHandler(object sender, KeyringAddKeyPlainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyringAddKeyPlainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyringAddKeyPlainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void KeyringGetUnlockedRealmsCompletedEventHandler(object sender, KeyringGetUnlockedRealmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class KeyringGetUnlockedRealmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal KeyringGetUnlockedRealmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetDownloadOriginalKeyCompletedEventHandler(object sender, GetDownloadOriginalKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDownloadOriginalKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDownloadOriginalKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetCategoriesCompletedEventHandler(object sender, GetCategoriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCategoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCategoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Category[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Category[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SearchSetByCategoryCompletedEventHandler(object sender, SearchSetByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchSetByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchSetByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SearchSetByTextCompletedEventHandler(object sender, SearchSetByTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchSetByTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchSetByTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoSetResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoSetResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetPopularSetsCompletedEventHandler(object sender, GetPopularSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPopularSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPopularSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetRecentSetsCompletedEventHandler(object sender, GetRecentSetsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecentSetsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecentSetsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoSet[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoSet[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SearchPhotoByCategoryCompletedEventHandler(object sender, SearchPhotoByCategoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPhotoByCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPhotoByCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SearchPhotoByTextCompletedEventHandler(object sender, SearchPhotoByTextCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchPhotoByTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchPhotoByTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PhotoResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PhotoResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetPopularPhotosCompletedEventHandler(object sender, GetPopularPhotosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPopularPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPopularPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Photo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Photo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetRecentPhotosCompletedEventHandler(object sender, GetRecentPhotosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRecentPhotosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRecentPhotosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Photo[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Photo[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreateGroupCompletedEventHandler(object sender, CreateGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void DeleteGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreatePhotoFromUrlCompletedEventHandler(object sender, CreatePhotoFromUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePhotoFromUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePhotoFromUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void CreateVideoFromUrlCompletedEventHandler(object sender, CreateVideoFromUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateVideoFromUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateVideoFromUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591